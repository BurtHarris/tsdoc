

// This file was autogenerated using ts-gen-transform
// https://github.com/samvv/ts-gen-transform

// Copyright 2017 Sam Vervaeck
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
// of the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.


import * as ts from "typescript"

function assignAndMapElements(arr, mapper, obj) {
  const newObj = Object.assign({}, obj)
  for (let i = 0; i < arr.length; ++i) {
    newObj[i] = mapper(arr[i])
  }
  return newObj
}

export interface Factory {

  Node(node: any): any

  Token(node: any): any

  Identifier(node: any): any

  QualifiedName(node: any): any

  ComputedPropertyName(node: any): any

  Decorator(node: any): any

  TypeParameterDeclaration(node: any): any

  CallSignatureDeclaration(node: any): any

  ConstructSignatureDeclaration(node: any): any

  VariableDeclaration(node: any): any

  VariableDeclarationList(node: any): any

  ParameterDeclaration(node: any): any

  BindingElement(node: any): any

  PropertySignature(node: any): any

  PropertyDeclaration(node: any): any

  PropertyAssignment(node: any): any

  ShorthandPropertyAssignment(node: any): any

  SpreadAssignment(node: any): any

  ObjectBindingPattern(node: any): any

  ArrayBindingPattern(node: any): any

  FunctionDeclaration(node: any): any

  MethodSignature(node: any): any

  MethodDeclaration(node: any): any

  ConstructorDeclaration(node: any): any

  SemicolonClassElement(node: any): any

  GetAccessorDeclaration(node: any): any

  SetAccessorDeclaration(node: any): any

  IndexSignatureDeclaration(node: any): any

  KeywordTypeNode(node: any): any

  ThisTypeNode(node: any): any

  FunctionTypeNode(node: any): any

  ConstructorTypeNode(node: any): any

  TypeReferenceNode(node: any): any

  TypePredicateNode(node: any): any

  TypeQueryNode(node: any): any

  TypeLiteralNode(node: any): any

  ArrayTypeNode(node: any): any

  TupleTypeNode(node: any): any

  UnionTypeNode(node: any): any

  IntersectionTypeNode(node: any): any

  ParenthesizedTypeNode(node: any): any

  TypeOperatorNode(node: any): any

  IndexedAccessTypeNode(node: any): any

  MappedTypeNode(node: any): any

  LiteralTypeNode(node: any): any

  StringLiteral(node: any): any

  OmittedExpression(node: any): any

  PartiallyEmittedExpression(node: any): any

  PrefixUnaryExpression(node: any): any

  PostfixUnaryExpression(node: any): any

  NullLiteral(node: any): any

  BooleanLiteral(node: any): any

  ThisExpression(node: any): any

  SuperExpression(node: any): any

  ImportExpression(node: any): any

  DeleteExpression(node: any): any

  TypeOfExpression(node: any): any

  VoidExpression(node: any): any

  AwaitExpression(node: any): any

  YieldExpression(node: any): any

  BinaryExpression(node: any): any

  ConditionalExpression(node: any): any

  FunctionExpression(node: any): any

  ArrowFunction(node: any): any

  RegularExpressionLiteral(node: any): any

  NoSubstitutionTemplateLiteral(node: any): any

  NumericLiteral(node: any): any

  TemplateHead(node: any): any

  TemplateMiddle(node: any): any

  TemplateTail(node: any): any

  TemplateExpression(node: any): any

  TemplateSpan(node: any): any

  ParenthesizedExpression(node: any): any

  ArrayLiteralExpression(node: any): any

  SpreadElement(node: any): any

  ObjectLiteralExpression(node: any): any

  PropertyAccessExpression(node: any): any

  ElementAccessExpression(node: any): any

  CallExpression(node: any): any

  ExpressionWithTypeArguments(node: any): any

  NewExpression(node: any): any

  TaggedTemplateExpression(node: any): any

  AsExpression(node: any): any

  TypeAssertion(node: any): any

  NonNullExpression(node: any): any

  MetaProperty(node: any): any

  JsxElement(node: any): any

  JsxOpeningElement(node: any): any

  JsxSelfClosingElement(node: any): any

  JsxAttribute(node: any): any

  JsxSpreadAttribute(node: any): any

  JsxClosingElement(node: any): any

  JsxExpression(node: any): any

  JsxText(node: any): any

  NotEmittedStatement(node: any): any

  CommaListExpression(node: any): any

  EmptyStatement(node: any): any

  DebuggerStatement(node: any): any

  MissingDeclaration(node: any): any

  Block(node: any): any

  VariableStatement(node: any): any

  ExpressionStatement(node: any): any

  IfStatement(node: any): any

  DoStatement(node: any): any

  WhileStatement(node: any): any

  ForStatement(node: any): any

  ForInStatement(node: any): any

  ForOfStatement(node: any): any

  BreakStatement(node: any): any

  ContinueStatement(node: any): any

  ReturnStatement(node: any): any

  WithStatement(node: any): any

  SwitchStatement(node: any): any

  CaseBlock(node: any): any

  CaseClause(node: any): any

  DefaultClause(node: any): any

  LabeledStatement(node: any): any

  ThrowStatement(node: any): any

  TryStatement(node: any): any

  CatchClause(node: any): any

  ClassDeclaration(node: any): any

  ClassExpression(node: any): any

  InterfaceDeclaration(node: any): any

  HeritageClause(node: any): any

  TypeAliasDeclaration(node: any): any

  EnumMember(node: any): any

  EnumDeclaration(node: any): any

  ModuleDeclaration(node: any): any

  ModuleBlock(node: any): any

  ImportEqualsDeclaration(node: any): any

  ExternalModuleReference(node: any): any

  ImportDeclaration(node: any): any

  ImportClause(node: any): any

  NamespaceImport(node: any): any

  NamespaceExportDeclaration(node: any): any

  ExportDeclaration(node: any): any

  NamedImports(node: any): any

  NamedExports(node: any): any

  ImportSpecifier(node: any): any

  ExportSpecifier(node: any): any

  ExportAssignment(node: any): any

  CommentRange(node: any): any

  JSDocTypeExpression(node: any): any

  JSDocAllType(node: any): any

  JSDocUnknownType(node: any): any

  JSDocArrayType(node: any): any

  JSDocUnionType(node: any): any

  JSDocTupleType(node: any): any

  JSDocNonNullableType(node: any): any

  JSDocNullableType(node: any): any

  JSDocRecordType(node: any): any

  JSDocTypeReference(node: any): any

  JSDocOptionalType(node: any): any

  JSDocFunctionType(node: any): any

  JSDocVariadicType(node: any): any

  JSDocConstructorType(node: any): any

  JSDocThisType(node: any): any

  JSDocLiteralType(node: any): any

  JSDocRecordMember(node: any): any

  JSDoc(node: any): any

  JSDocUnknownTag(node: any): any

  JSDocAugmentsTag(node: any): any

  JSDocClassTag(node: any): any

  JSDocTemplateTag(node: any): any

  JSDocReturnTag(node: any): any

  JSDocTypeTag(node: any): any

  JSDocTypedefTag(node: any): any

  JSDocPropertyTag(node: any): any

  JSDocTypeLiteral(node: any): any

  JSDocParameterTag(node: any): any

  SourceFile(node: any): any

  Bundle(node: any): any


}

export class Visitor {

  constructor(public factory: Factory) {

  }

  Node(node: ts.Node) {
    return this.factory.Node({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  Token<Kind extends ts.SyntaxKind>(node: ts.Token<Kind>) {
    return this.factory.Token({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  Identifier(node: ts.Identifier) {
    return this.factory.Identifier({
      kind: node.kind,
      text: node.text,
      originalKeywordKind: node.originalKeywordKind === undefined ? undefined : node.originalKeywordKind,
      isInJSDocNamespace: node.isInJSDocNamespace === undefined ? undefined : node.isInJSDocNamespace,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  QualifiedName(node: ts.QualifiedName) {
    return this.factory.QualifiedName({
      kind: node.kind,
      left: this.visit(node.left),
      right: this.visit(node.right),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ComputedPropertyName(node: ts.ComputedPropertyName) {
    return this.factory.ComputedPropertyName({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  Decorator(node: ts.Decorator) {
    return this.factory.Decorator({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TypeParameterDeclaration(node: ts.TypeParameterDeclaration) {
    return this.factory.TypeParameterDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: this.visit(node.name),
      constraint: node.constraint === undefined ? undefined : {
        kind: node.constraint.kind,
        flags: node.constraint.flags,
        decorators: node.constraint.decorators === undefined ? undefined : assignAndMapElements(node.constraint.decorators, this.visit.bind(this), {
          hasTrailingComma: node.constraint.decorators.hasTrailingComma === undefined ? undefined : node.constraint.decorators.hasTrailingComma,
          pos: node.constraint.decorators.pos,
          end: node.constraint.decorators.end,
        }),
        modifiers: node.constraint.modifiers === undefined ? undefined : assignAndMapElements(node.constraint.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.constraint.modifiers.hasTrailingComma === undefined ? undefined : node.constraint.modifiers.hasTrailingComma,
          pos: node.constraint.modifiers.pos,
          end: node.constraint.modifiers.end,
        }),
        parent: node.constraint.parent === undefined ? undefined : this.visit(node.constraint.parent),
        pos: node.constraint.pos,
        end: node.constraint.end,
      },
      default: node.default === undefined ? undefined : {
        kind: node.default.kind,
        flags: node.default.flags,
        decorators: node.default.decorators === undefined ? undefined : assignAndMapElements(node.default.decorators, this.visit.bind(this), {
          hasTrailingComma: node.default.decorators.hasTrailingComma === undefined ? undefined : node.default.decorators.hasTrailingComma,
          pos: node.default.decorators.pos,
          end: node.default.decorators.end,
        }),
        modifiers: node.default.modifiers === undefined ? undefined : assignAndMapElements(node.default.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.default.modifiers.hasTrailingComma === undefined ? undefined : node.default.modifiers.hasTrailingComma,
          pos: node.default.modifiers.pos,
          end: node.default.modifiers.end,
        }),
        parent: node.default.parent === undefined ? undefined : this.visit(node.default.parent),
        pos: node.default.pos,
        end: node.default.end,
      },
      expression: node.expression === undefined ? undefined : {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  CallSignatureDeclaration(node: ts.CallSignatureDeclaration) {
    return this.factory.CallSignatureDeclaration({
      kind: node.kind,
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
    })
  }

  ConstructSignatureDeclaration(node: ts.ConstructSignatureDeclaration) {
    return this.factory.ConstructSignatureDeclaration({
      kind: node.kind,
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
    })
  }

  VariableDeclaration(node: ts.VariableDeclaration) {
    return this.factory.VariableDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: this.visit(node.name),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      initializer: node.initializer === undefined ? undefined : {
        kind: node.initializer.kind,
        flags: node.initializer.flags,
        decorators: node.initializer.decorators === undefined ? undefined : assignAndMapElements(node.initializer.decorators, this.visit.bind(this), {
          hasTrailingComma: node.initializer.decorators.hasTrailingComma === undefined ? undefined : node.initializer.decorators.hasTrailingComma,
          pos: node.initializer.decorators.pos,
          end: node.initializer.decorators.end,
        }),
        modifiers: node.initializer.modifiers === undefined ? undefined : assignAndMapElements(node.initializer.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.initializer.modifiers.hasTrailingComma === undefined ? undefined : node.initializer.modifiers.hasTrailingComma,
          pos: node.initializer.modifiers.pos,
          end: node.initializer.modifiers.end,
        }),
        parent: node.initializer.parent === undefined ? undefined : this.visit(node.initializer.parent),
        pos: node.initializer.pos,
        end: node.initializer.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  VariableDeclarationList(node: ts.VariableDeclarationList) {
    return this.factory.VariableDeclarationList({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      declarations: assignAndMapElements(node.declarations, this.visit.bind(this), {
        hasTrailingComma: node.declarations.hasTrailingComma === undefined ? undefined : node.declarations.hasTrailingComma,
        pos: node.declarations.pos,
        end: node.declarations.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ParameterDeclaration(node: ts.ParameterDeclaration) {
    return this.factory.ParameterDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : {
        name: node.parent.name === undefined ? undefined : this.visit(node.parent.name),
        typeParameters: node.parent.typeParameters === undefined ? undefined : assignAndMapElements(node.parent.typeParameters, this.visit.bind(this), {
          hasTrailingComma: node.parent.typeParameters.hasTrailingComma === undefined ? undefined : node.parent.typeParameters.hasTrailingComma,
          pos: node.parent.typeParameters.pos,
          end: node.parent.typeParameters.end,
        }),
        parameters: assignAndMapElements(node.parent.parameters, this.visit.bind(this), {
          hasTrailingComma: node.parent.parameters.hasTrailingComma === undefined ? undefined : node.parent.parameters.hasTrailingComma,
          pos: node.parent.parameters.pos,
          end: node.parent.parameters.end,
        }),
        type: node.parent.type === undefined ? undefined : {
          kind: node.parent.type.kind,
          flags: node.parent.type.flags,
          decorators: node.parent.type.decorators === undefined ? undefined : assignAndMapElements(node.parent.type.decorators, this.visit.bind(this), {
            hasTrailingComma: node.parent.type.decorators.hasTrailingComma === undefined ? undefined : node.parent.type.decorators.hasTrailingComma,
            pos: node.parent.type.decorators.pos,
            end: node.parent.type.decorators.end,
          }),
          modifiers: node.parent.type.modifiers === undefined ? undefined : assignAndMapElements(node.parent.type.modifiers, this.visit.bind(this), {
            hasTrailingComma: node.parent.type.modifiers.hasTrailingComma === undefined ? undefined : node.parent.type.modifiers.hasTrailingComma,
            pos: node.parent.type.modifiers.pos,
            end: node.parent.type.modifiers.end,
          }),
          parent: node.parent.type.parent === undefined ? undefined : this.visit(node.parent.type.parent),
          pos: node.parent.type.pos,
          end: node.parent.type.end,
        },
        kind: node.parent.kind,
        flags: node.parent.flags,
        decorators: node.parent.decorators === undefined ? undefined : assignAndMapElements(node.parent.decorators, this.visit.bind(this), {
          hasTrailingComma: node.parent.decorators.hasTrailingComma === undefined ? undefined : node.parent.decorators.hasTrailingComma,
          pos: node.parent.decorators.pos,
          end: node.parent.decorators.end,
        }),
        modifiers: node.parent.modifiers === undefined ? undefined : assignAndMapElements(node.parent.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.parent.modifiers.hasTrailingComma === undefined ? undefined : node.parent.modifiers.hasTrailingComma,
          pos: node.parent.modifiers.pos,
          end: node.parent.modifiers.end,
        }),
        parent: node.parent.parent === undefined ? undefined : this.visit(node.parent.parent),
        pos: node.parent.pos,
        end: node.parent.end,
      },
      dotDotDotToken: node.dotDotDotToken === undefined ? undefined : this.visit(node.dotDotDotToken),
      name: this.visit(node.name),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      initializer: node.initializer === undefined ? undefined : {
        kind: node.initializer.kind,
        flags: node.initializer.flags,
        decorators: node.initializer.decorators === undefined ? undefined : assignAndMapElements(node.initializer.decorators, this.visit.bind(this), {
          hasTrailingComma: node.initializer.decorators.hasTrailingComma === undefined ? undefined : node.initializer.decorators.hasTrailingComma,
          pos: node.initializer.decorators.pos,
          end: node.initializer.decorators.end,
        }),
        modifiers: node.initializer.modifiers === undefined ? undefined : assignAndMapElements(node.initializer.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.initializer.modifiers.hasTrailingComma === undefined ? undefined : node.initializer.modifiers.hasTrailingComma,
          pos: node.initializer.modifiers.pos,
          end: node.initializer.modifiers.end,
        }),
        parent: node.initializer.parent === undefined ? undefined : this.visit(node.initializer.parent),
        pos: node.initializer.pos,
        end: node.initializer.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  BindingElement(node: ts.BindingElement) {
    return this.factory.BindingElement({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      propertyName: node.propertyName === undefined ? undefined : this.visit(node.propertyName),
      dotDotDotToken: node.dotDotDotToken === undefined ? undefined : this.visit(node.dotDotDotToken),
      name: this.visit(node.name),
      initializer: node.initializer === undefined ? undefined : {
        kind: node.initializer.kind,
        flags: node.initializer.flags,
        decorators: node.initializer.decorators === undefined ? undefined : assignAndMapElements(node.initializer.decorators, this.visit.bind(this), {
          hasTrailingComma: node.initializer.decorators.hasTrailingComma === undefined ? undefined : node.initializer.decorators.hasTrailingComma,
          pos: node.initializer.decorators.pos,
          end: node.initializer.decorators.end,
        }),
        modifiers: node.initializer.modifiers === undefined ? undefined : assignAndMapElements(node.initializer.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.initializer.modifiers.hasTrailingComma === undefined ? undefined : node.initializer.modifiers.hasTrailingComma,
          pos: node.initializer.modifiers.pos,
          end: node.initializer.modifiers.end,
        }),
        parent: node.initializer.parent === undefined ? undefined : this.visit(node.initializer.parent),
        pos: node.initializer.pos,
        end: node.initializer.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  PropertySignature(node: ts.PropertySignature) {
    return this.factory.PropertySignature({
      kind: node.kind,
      name: this.visit(node.name),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      initializer: node.initializer === undefined ? undefined : {
        kind: node.initializer.kind,
        flags: node.initializer.flags,
        decorators: node.initializer.decorators === undefined ? undefined : assignAndMapElements(node.initializer.decorators, this.visit.bind(this), {
          hasTrailingComma: node.initializer.decorators.hasTrailingComma === undefined ? undefined : node.initializer.decorators.hasTrailingComma,
          pos: node.initializer.decorators.pos,
          end: node.initializer.decorators.end,
        }),
        modifiers: node.initializer.modifiers === undefined ? undefined : assignAndMapElements(node.initializer.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.initializer.modifiers.hasTrailingComma === undefined ? undefined : node.initializer.modifiers.hasTrailingComma,
          pos: node.initializer.modifiers.pos,
          end: node.initializer.modifiers.end,
        }),
        parent: node.initializer.parent === undefined ? undefined : this.visit(node.initializer.parent),
        pos: node.initializer.pos,
        end: node.initializer.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  PropertyDeclaration(node: ts.PropertyDeclaration) {
    return this.factory.PropertyDeclaration({
      kind: node.kind,
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      name: this.visit(node.name),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      initializer: node.initializer === undefined ? undefined : {
        kind: node.initializer.kind,
        flags: node.initializer.flags,
        decorators: node.initializer.decorators === undefined ? undefined : assignAndMapElements(node.initializer.decorators, this.visit.bind(this), {
          hasTrailingComma: node.initializer.decorators.hasTrailingComma === undefined ? undefined : node.initializer.decorators.hasTrailingComma,
          pos: node.initializer.decorators.pos,
          end: node.initializer.decorators.end,
        }),
        modifiers: node.initializer.modifiers === undefined ? undefined : assignAndMapElements(node.initializer.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.initializer.modifiers.hasTrailingComma === undefined ? undefined : node.initializer.modifiers.hasTrailingComma,
          pos: node.initializer.modifiers.pos,
          end: node.initializer.modifiers.end,
        }),
        parent: node.initializer.parent === undefined ? undefined : this.visit(node.initializer.parent),
        pos: node.initializer.pos,
        end: node.initializer.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  PropertyAssignment(node: ts.PropertyAssignment) {
    return this.factory.PropertyAssignment({
      kind: node.kind,
      name: this.visit(node.name),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      initializer: {
        kind: node.initializer.kind,
        flags: node.initializer.flags,
        decorators: node.initializer.decorators === undefined ? undefined : assignAndMapElements(node.initializer.decorators, this.visit.bind(this), {
          hasTrailingComma: node.initializer.decorators.hasTrailingComma === undefined ? undefined : node.initializer.decorators.hasTrailingComma,
          pos: node.initializer.decorators.pos,
          end: node.initializer.decorators.end,
        }),
        modifiers: node.initializer.modifiers === undefined ? undefined : assignAndMapElements(node.initializer.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.initializer.modifiers.hasTrailingComma === undefined ? undefined : node.initializer.modifiers.hasTrailingComma,
          pos: node.initializer.modifiers.pos,
          end: node.initializer.modifiers.end,
        }),
        parent: node.initializer.parent === undefined ? undefined : this.visit(node.initializer.parent),
        pos: node.initializer.pos,
        end: node.initializer.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ShorthandPropertyAssignment(node: ts.ShorthandPropertyAssignment) {
    return this.factory.ShorthandPropertyAssignment({
      kind: node.kind,
      name: this.visit(node.name),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      equalsToken: node.equalsToken === undefined ? undefined : this.visit(node.equalsToken),
      objectAssignmentInitializer: node.objectAssignmentInitializer === undefined ? undefined : {
        kind: node.objectAssignmentInitializer.kind,
        flags: node.objectAssignmentInitializer.flags,
        decorators: node.objectAssignmentInitializer.decorators === undefined ? undefined : assignAndMapElements(node.objectAssignmentInitializer.decorators, this.visit.bind(this), {
          hasTrailingComma: node.objectAssignmentInitializer.decorators.hasTrailingComma === undefined ? undefined : node.objectAssignmentInitializer.decorators.hasTrailingComma,
          pos: node.objectAssignmentInitializer.decorators.pos,
          end: node.objectAssignmentInitializer.decorators.end,
        }),
        modifiers: node.objectAssignmentInitializer.modifiers === undefined ? undefined : assignAndMapElements(node.objectAssignmentInitializer.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.objectAssignmentInitializer.modifiers.hasTrailingComma === undefined ? undefined : node.objectAssignmentInitializer.modifiers.hasTrailingComma,
          pos: node.objectAssignmentInitializer.modifiers.pos,
          end: node.objectAssignmentInitializer.modifiers.end,
        }),
        parent: node.objectAssignmentInitializer.parent === undefined ? undefined : this.visit(node.objectAssignmentInitializer.parent),
        pos: node.objectAssignmentInitializer.pos,
        end: node.objectAssignmentInitializer.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  SpreadAssignment(node: ts.SpreadAssignment) {
    return this.factory.SpreadAssignment({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      name: node.name === undefined ? undefined : this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ObjectBindingPattern(node: ts.ObjectBindingPattern) {
    return this.factory.ObjectBindingPattern({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      elements: assignAndMapElements(node.elements, this.visit.bind(this), {
        hasTrailingComma: node.elements.hasTrailingComma === undefined ? undefined : node.elements.hasTrailingComma,
        pos: node.elements.pos,
        end: node.elements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ArrayBindingPattern(node: ts.ArrayBindingPattern) {
    return this.factory.ArrayBindingPattern({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      elements: assignAndMapElements(node.elements, this.visit.bind(this), {
        hasTrailingComma: node.elements.hasTrailingComma === undefined ? undefined : node.elements.hasTrailingComma,
        pos: node.elements.pos,
        end: node.elements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  FunctionDeclaration(node: ts.FunctionDeclaration) {
    return this.factory.FunctionDeclaration({
      kind: node.kind,
      name: node.name === undefined ? undefined : this.visit(node.name),
      body: node.body === undefined ? undefined : this.visit(node.body),
      asteriskToken: node.asteriskToken === undefined ? undefined : this.visit(node.asteriskToken),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  MethodSignature(node: ts.MethodSignature) {
    return this.factory.MethodSignature({
      kind: node.kind,
      name: this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
    })
  }

  MethodDeclaration(node: ts.MethodDeclaration) {
    return this.factory.MethodDeclaration({
      kind: node.kind,
      name: this.visit(node.name),
      body: node.body === undefined ? undefined : this.visit(node.body),
      asteriskToken: node.asteriskToken === undefined ? undefined : this.visit(node.asteriskToken),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ConstructorDeclaration(node: ts.ConstructorDeclaration) {
    return this.factory.ConstructorDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      body: node.body === undefined ? undefined : this.visit(node.body),
      asteriskToken: node.asteriskToken === undefined ? undefined : this.visit(node.asteriskToken),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  SemicolonClassElement(node: ts.SemicolonClassElement) {
    return this.factory.SemicolonClassElement({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: node.name === undefined ? undefined : this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  GetAccessorDeclaration(node: ts.GetAccessorDeclaration) {
    return this.factory.GetAccessorDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: this.visit(node.name),
      body: this.visit(node.body),
      asteriskToken: node.asteriskToken === undefined ? undefined : this.visit(node.asteriskToken),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  SetAccessorDeclaration(node: ts.SetAccessorDeclaration) {
    return this.factory.SetAccessorDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: this.visit(node.name),
      body: this.visit(node.body),
      asteriskToken: node.asteriskToken === undefined ? undefined : this.visit(node.asteriskToken),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  IndexSignatureDeclaration(node: ts.IndexSignatureDeclaration) {
    return this.factory.IndexSignatureDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
    })
  }

  KeywordTypeNode(node: ts.KeywordTypeNode) {
    return this.factory.KeywordTypeNode({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ThisTypeNode(node: ts.ThisTypeNode) {
    return this.factory.ThisTypeNode({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  FunctionTypeNode(node: ts.FunctionTypeNode) {
    return this.factory.FunctionTypeNode({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
    })
  }

  ConstructorTypeNode(node: ts.ConstructorTypeNode) {
    return this.factory.ConstructorTypeNode({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
    })
  }

  TypeReferenceNode(node: ts.TypeReferenceNode) {
    return this.factory.TypeReferenceNode({
      kind: node.kind,
      typeName: this.visit(node.typeName),
      typeArguments: node.typeArguments === undefined ? undefined : assignAndMapElements(node.typeArguments, this.visit.bind(this), {
        hasTrailingComma: node.typeArguments.hasTrailingComma === undefined ? undefined : node.typeArguments.hasTrailingComma,
        pos: node.typeArguments.pos,
        end: node.typeArguments.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TypePredicateNode(node: ts.TypePredicateNode) {
    return this.factory.TypePredicateNode({
      kind: node.kind,
      parameterName: this.visit(node.parameterName),
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TypeQueryNode(node: ts.TypeQueryNode) {
    return this.factory.TypeQueryNode({
      kind: node.kind,
      exprName: this.visit(node.exprName),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TypeLiteralNode(node: ts.TypeLiteralNode) {
    return this.factory.TypeLiteralNode({
      kind: node.kind,
      members: assignAndMapElements(node.members, this.visit.bind(this), {
        hasTrailingComma: node.members.hasTrailingComma === undefined ? undefined : node.members.hasTrailingComma,
        pos: node.members.pos,
        end: node.members.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ArrayTypeNode(node: ts.ArrayTypeNode) {
    return this.factory.ArrayTypeNode({
      kind: node.kind,
      elementType: {
        kind: node.elementType.kind,
        flags: node.elementType.flags,
        decorators: node.elementType.decorators === undefined ? undefined : assignAndMapElements(node.elementType.decorators, this.visit.bind(this), {
          hasTrailingComma: node.elementType.decorators.hasTrailingComma === undefined ? undefined : node.elementType.decorators.hasTrailingComma,
          pos: node.elementType.decorators.pos,
          end: node.elementType.decorators.end,
        }),
        modifiers: node.elementType.modifiers === undefined ? undefined : assignAndMapElements(node.elementType.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.elementType.modifiers.hasTrailingComma === undefined ? undefined : node.elementType.modifiers.hasTrailingComma,
          pos: node.elementType.modifiers.pos,
          end: node.elementType.modifiers.end,
        }),
        parent: node.elementType.parent === undefined ? undefined : this.visit(node.elementType.parent),
        pos: node.elementType.pos,
        end: node.elementType.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TupleTypeNode(node: ts.TupleTypeNode) {
    return this.factory.TupleTypeNode({
      kind: node.kind,
      elementTypes: assignAndMapElements(node.elementTypes, this.visit.bind(this), {
        hasTrailingComma: node.elementTypes.hasTrailingComma === undefined ? undefined : node.elementTypes.hasTrailingComma,
        pos: node.elementTypes.pos,
        end: node.elementTypes.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  UnionTypeNode(node: ts.UnionTypeNode) {
    return this.factory.UnionTypeNode({
      kind: node.kind,
      types: assignAndMapElements(node.types, this.visit.bind(this), {
        hasTrailingComma: node.types.hasTrailingComma === undefined ? undefined : node.types.hasTrailingComma,
        pos: node.types.pos,
        end: node.types.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  IntersectionTypeNode(node: ts.IntersectionTypeNode) {
    return this.factory.IntersectionTypeNode({
      kind: node.kind,
      types: assignAndMapElements(node.types, this.visit.bind(this), {
        hasTrailingComma: node.types.hasTrailingComma === undefined ? undefined : node.types.hasTrailingComma,
        pos: node.types.pos,
        end: node.types.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ParenthesizedTypeNode(node: ts.ParenthesizedTypeNode) {
    return this.factory.ParenthesizedTypeNode({
      kind: node.kind,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TypeOperatorNode(node: ts.TypeOperatorNode) {
    return this.factory.TypeOperatorNode({
      kind: node.kind,
      operator: node.operator,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  IndexedAccessTypeNode(node: ts.IndexedAccessTypeNode) {
    return this.factory.IndexedAccessTypeNode({
      kind: node.kind,
      objectType: {
        kind: node.objectType.kind,
        flags: node.objectType.flags,
        decorators: node.objectType.decorators === undefined ? undefined : assignAndMapElements(node.objectType.decorators, this.visit.bind(this), {
          hasTrailingComma: node.objectType.decorators.hasTrailingComma === undefined ? undefined : node.objectType.decorators.hasTrailingComma,
          pos: node.objectType.decorators.pos,
          end: node.objectType.decorators.end,
        }),
        modifiers: node.objectType.modifiers === undefined ? undefined : assignAndMapElements(node.objectType.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.objectType.modifiers.hasTrailingComma === undefined ? undefined : node.objectType.modifiers.hasTrailingComma,
          pos: node.objectType.modifiers.pos,
          end: node.objectType.modifiers.end,
        }),
        parent: node.objectType.parent === undefined ? undefined : this.visit(node.objectType.parent),
        pos: node.objectType.pos,
        end: node.objectType.end,
      },
      indexType: {
        kind: node.indexType.kind,
        flags: node.indexType.flags,
        decorators: node.indexType.decorators === undefined ? undefined : assignAndMapElements(node.indexType.decorators, this.visit.bind(this), {
          hasTrailingComma: node.indexType.decorators.hasTrailingComma === undefined ? undefined : node.indexType.decorators.hasTrailingComma,
          pos: node.indexType.decorators.pos,
          end: node.indexType.decorators.end,
        }),
        modifiers: node.indexType.modifiers === undefined ? undefined : assignAndMapElements(node.indexType.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.indexType.modifiers.hasTrailingComma === undefined ? undefined : node.indexType.modifiers.hasTrailingComma,
          pos: node.indexType.modifiers.pos,
          end: node.indexType.modifiers.end,
        }),
        parent: node.indexType.parent === undefined ? undefined : this.visit(node.indexType.parent),
        pos: node.indexType.pos,
        end: node.indexType.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  MappedTypeNode(node: ts.MappedTypeNode) {
    return this.factory.MappedTypeNode({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      readonlyToken: node.readonlyToken === undefined ? undefined : this.visit(node.readonlyToken),
      typeParameter: this.visit(node.typeParameter),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  LiteralTypeNode(node: ts.LiteralTypeNode) {
    return this.factory.LiteralTypeNode({
      kind: node.kind,
      literal: {
        kind: node.literal.kind,
        flags: node.literal.flags,
        decorators: node.literal.decorators === undefined ? undefined : assignAndMapElements(node.literal.decorators, this.visit.bind(this), {
          hasTrailingComma: node.literal.decorators.hasTrailingComma === undefined ? undefined : node.literal.decorators.hasTrailingComma,
          pos: node.literal.decorators.pos,
          end: node.literal.decorators.end,
        }),
        modifiers: node.literal.modifiers === undefined ? undefined : assignAndMapElements(node.literal.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.literal.modifiers.hasTrailingComma === undefined ? undefined : node.literal.modifiers.hasTrailingComma,
          pos: node.literal.modifiers.pos,
          end: node.literal.modifiers.end,
        }),
        parent: node.literal.parent === undefined ? undefined : this.visit(node.literal.parent),
        pos: node.literal.pos,
        end: node.literal.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  StringLiteral(node: ts.StringLiteral) {
    return this.factory.StringLiteral({
      kind: node.kind,
      text: node.text,
      isUnterminated: node.isUnterminated === undefined ? undefined : node.isUnterminated,
      hasExtendedUnicodeEscape: node.hasExtendedUnicodeEscape === undefined ? undefined : node.hasExtendedUnicodeEscape,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  OmittedExpression(node: ts.OmittedExpression) {
    return this.factory.OmittedExpression({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  PartiallyEmittedExpression(node: ts.PartiallyEmittedExpression) {
    return this.factory.PartiallyEmittedExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  PrefixUnaryExpression(node: ts.PrefixUnaryExpression) {
    return this.factory.PrefixUnaryExpression({
      kind: node.kind,
      operator: node.operator,
      operand: {
        kind: node.operand.kind,
        flags: node.operand.flags,
        decorators: node.operand.decorators === undefined ? undefined : assignAndMapElements(node.operand.decorators, this.visit.bind(this), {
          hasTrailingComma: node.operand.decorators.hasTrailingComma === undefined ? undefined : node.operand.decorators.hasTrailingComma,
          pos: node.operand.decorators.pos,
          end: node.operand.decorators.end,
        }),
        modifiers: node.operand.modifiers === undefined ? undefined : assignAndMapElements(node.operand.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.operand.modifiers.hasTrailingComma === undefined ? undefined : node.operand.modifiers.hasTrailingComma,
          pos: node.operand.modifiers.pos,
          end: node.operand.modifiers.end,
        }),
        parent: node.operand.parent === undefined ? undefined : this.visit(node.operand.parent),
        pos: node.operand.pos,
        end: node.operand.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  PostfixUnaryExpression(node: ts.PostfixUnaryExpression) {
    return this.factory.PostfixUnaryExpression({
      kind: node.kind,
      operand: {
        kind: node.operand.kind,
        flags: node.operand.flags,
        decorators: node.operand.decorators === undefined ? undefined : assignAndMapElements(node.operand.decorators, this.visit.bind(this), {
          hasTrailingComma: node.operand.decorators.hasTrailingComma === undefined ? undefined : node.operand.decorators.hasTrailingComma,
          pos: node.operand.decorators.pos,
          end: node.operand.decorators.end,
        }),
        modifiers: node.operand.modifiers === undefined ? undefined : assignAndMapElements(node.operand.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.operand.modifiers.hasTrailingComma === undefined ? undefined : node.operand.modifiers.hasTrailingComma,
          pos: node.operand.modifiers.pos,
          end: node.operand.modifiers.end,
        }),
        parent: node.operand.parent === undefined ? undefined : this.visit(node.operand.parent),
        pos: node.operand.pos,
        end: node.operand.end,
      },
      operator: node.operator,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  NullLiteral(node: ts.NullLiteral) {
    return this.factory.NullLiteral({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  BooleanLiteral(node: ts.BooleanLiteral) {
    return this.factory.BooleanLiteral({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ThisExpression(node: ts.ThisExpression) {
    return this.factory.ThisExpression({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  SuperExpression(node: ts.SuperExpression) {
    return this.factory.SuperExpression({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ImportExpression(node: ts.ImportExpression) {
    return this.factory.ImportExpression({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  DeleteExpression(node: ts.DeleteExpression) {
    return this.factory.DeleteExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TypeOfExpression(node: ts.TypeOfExpression) {
    return this.factory.TypeOfExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  VoidExpression(node: ts.VoidExpression) {
    return this.factory.VoidExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  AwaitExpression(node: ts.AwaitExpression) {
    return this.factory.AwaitExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  YieldExpression(node: ts.YieldExpression) {
    return this.factory.YieldExpression({
      kind: node.kind,
      asteriskToken: node.asteriskToken === undefined ? undefined : this.visit(node.asteriskToken),
      expression: node.expression === undefined ? undefined : {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  BinaryExpression(node: ts.BinaryExpression) {
    return this.factory.BinaryExpression({
      kind: node.kind,
      left: {
        kind: node.left.kind,
        flags: node.left.flags,
        decorators: node.left.decorators === undefined ? undefined : assignAndMapElements(node.left.decorators, this.visit.bind(this), {
          hasTrailingComma: node.left.decorators.hasTrailingComma === undefined ? undefined : node.left.decorators.hasTrailingComma,
          pos: node.left.decorators.pos,
          end: node.left.decorators.end,
        }),
        modifiers: node.left.modifiers === undefined ? undefined : assignAndMapElements(node.left.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.left.modifiers.hasTrailingComma === undefined ? undefined : node.left.modifiers.hasTrailingComma,
          pos: node.left.modifiers.pos,
          end: node.left.modifiers.end,
        }),
        parent: node.left.parent === undefined ? undefined : this.visit(node.left.parent),
        pos: node.left.pos,
        end: node.left.end,
      },
      operatorToken: this.visit(node.operatorToken),
      right: {
        kind: node.right.kind,
        flags: node.right.flags,
        decorators: node.right.decorators === undefined ? undefined : assignAndMapElements(node.right.decorators, this.visit.bind(this), {
          hasTrailingComma: node.right.decorators.hasTrailingComma === undefined ? undefined : node.right.decorators.hasTrailingComma,
          pos: node.right.decorators.pos,
          end: node.right.decorators.end,
        }),
        modifiers: node.right.modifiers === undefined ? undefined : assignAndMapElements(node.right.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.right.modifiers.hasTrailingComma === undefined ? undefined : node.right.modifiers.hasTrailingComma,
          pos: node.right.modifiers.pos,
          end: node.right.modifiers.end,
        }),
        parent: node.right.parent === undefined ? undefined : this.visit(node.right.parent),
        pos: node.right.pos,
        end: node.right.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ConditionalExpression(node: ts.ConditionalExpression) {
    return this.factory.ConditionalExpression({
      kind: node.kind,
      condition: {
        kind: node.condition.kind,
        flags: node.condition.flags,
        decorators: node.condition.decorators === undefined ? undefined : assignAndMapElements(node.condition.decorators, this.visit.bind(this), {
          hasTrailingComma: node.condition.decorators.hasTrailingComma === undefined ? undefined : node.condition.decorators.hasTrailingComma,
          pos: node.condition.decorators.pos,
          end: node.condition.decorators.end,
        }),
        modifiers: node.condition.modifiers === undefined ? undefined : assignAndMapElements(node.condition.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.condition.modifiers.hasTrailingComma === undefined ? undefined : node.condition.modifiers.hasTrailingComma,
          pos: node.condition.modifiers.pos,
          end: node.condition.modifiers.end,
        }),
        parent: node.condition.parent === undefined ? undefined : this.visit(node.condition.parent),
        pos: node.condition.pos,
        end: node.condition.end,
      },
      questionToken: this.visit(node.questionToken),
      whenTrue: {
        kind: node.whenTrue.kind,
        flags: node.whenTrue.flags,
        decorators: node.whenTrue.decorators === undefined ? undefined : assignAndMapElements(node.whenTrue.decorators, this.visit.bind(this), {
          hasTrailingComma: node.whenTrue.decorators.hasTrailingComma === undefined ? undefined : node.whenTrue.decorators.hasTrailingComma,
          pos: node.whenTrue.decorators.pos,
          end: node.whenTrue.decorators.end,
        }),
        modifiers: node.whenTrue.modifiers === undefined ? undefined : assignAndMapElements(node.whenTrue.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.whenTrue.modifiers.hasTrailingComma === undefined ? undefined : node.whenTrue.modifiers.hasTrailingComma,
          pos: node.whenTrue.modifiers.pos,
          end: node.whenTrue.modifiers.end,
        }),
        parent: node.whenTrue.parent === undefined ? undefined : this.visit(node.whenTrue.parent),
        pos: node.whenTrue.pos,
        end: node.whenTrue.end,
      },
      colonToken: this.visit(node.colonToken),
      whenFalse: {
        kind: node.whenFalse.kind,
        flags: node.whenFalse.flags,
        decorators: node.whenFalse.decorators === undefined ? undefined : assignAndMapElements(node.whenFalse.decorators, this.visit.bind(this), {
          hasTrailingComma: node.whenFalse.decorators.hasTrailingComma === undefined ? undefined : node.whenFalse.decorators.hasTrailingComma,
          pos: node.whenFalse.decorators.pos,
          end: node.whenFalse.decorators.end,
        }),
        modifiers: node.whenFalse.modifiers === undefined ? undefined : assignAndMapElements(node.whenFalse.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.whenFalse.modifiers.hasTrailingComma === undefined ? undefined : node.whenFalse.modifiers.hasTrailingComma,
          pos: node.whenFalse.modifiers.pos,
          end: node.whenFalse.modifiers.end,
        }),
        parent: node.whenFalse.parent === undefined ? undefined : this.visit(node.whenFalse.parent),
        pos: node.whenFalse.pos,
        end: node.whenFalse.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  FunctionExpression(node: ts.FunctionExpression) {
    return this.factory.FunctionExpression({
      kind: node.kind,
      name: node.name === undefined ? undefined : this.visit(node.name),
      body: this.visit(node.body),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
      asteriskToken: node.asteriskToken === undefined ? undefined : this.visit(node.asteriskToken),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
    })
  }

  ArrowFunction(node: ts.ArrowFunction) {
    return this.factory.ArrowFunction({
      kind: node.kind,
      equalsGreaterThanToken: this.visit(node.equalsGreaterThanToken),
      body: this.visit(node.body),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
      asteriskToken: node.asteriskToken === undefined ? undefined : this.visit(node.asteriskToken),
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
    })
  }

  RegularExpressionLiteral(node: ts.RegularExpressionLiteral) {
    return this.factory.RegularExpressionLiteral({
      kind: node.kind,
      text: node.text,
      isUnterminated: node.isUnterminated === undefined ? undefined : node.isUnterminated,
      hasExtendedUnicodeEscape: node.hasExtendedUnicodeEscape === undefined ? undefined : node.hasExtendedUnicodeEscape,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  NoSubstitutionTemplateLiteral(node: ts.NoSubstitutionTemplateLiteral) {
    return this.factory.NoSubstitutionTemplateLiteral({
      kind: node.kind,
      text: node.text,
      isUnterminated: node.isUnterminated === undefined ? undefined : node.isUnterminated,
      hasExtendedUnicodeEscape: node.hasExtendedUnicodeEscape === undefined ? undefined : node.hasExtendedUnicodeEscape,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  NumericLiteral(node: ts.NumericLiteral) {
    return this.factory.NumericLiteral({
      kind: node.kind,
      text: node.text,
      isUnterminated: node.isUnterminated === undefined ? undefined : node.isUnterminated,
      hasExtendedUnicodeEscape: node.hasExtendedUnicodeEscape === undefined ? undefined : node.hasExtendedUnicodeEscape,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TemplateHead(node: ts.TemplateHead) {
    return this.factory.TemplateHead({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      text: node.text,
      isUnterminated: node.isUnterminated === undefined ? undefined : node.isUnterminated,
      hasExtendedUnicodeEscape: node.hasExtendedUnicodeEscape === undefined ? undefined : node.hasExtendedUnicodeEscape,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  TemplateMiddle(node: ts.TemplateMiddle) {
    return this.factory.TemplateMiddle({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      text: node.text,
      isUnterminated: node.isUnterminated === undefined ? undefined : node.isUnterminated,
      hasExtendedUnicodeEscape: node.hasExtendedUnicodeEscape === undefined ? undefined : node.hasExtendedUnicodeEscape,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  TemplateTail(node: ts.TemplateTail) {
    return this.factory.TemplateTail({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      text: node.text,
      isUnterminated: node.isUnterminated === undefined ? undefined : node.isUnterminated,
      hasExtendedUnicodeEscape: node.hasExtendedUnicodeEscape === undefined ? undefined : node.hasExtendedUnicodeEscape,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  TemplateExpression(node: ts.TemplateExpression) {
    return this.factory.TemplateExpression({
      kind: node.kind,
      head: this.visit(node.head),
      templateSpans: assignAndMapElements(node.templateSpans, this.visit.bind(this), {
        hasTrailingComma: node.templateSpans.hasTrailingComma === undefined ? undefined : node.templateSpans.hasTrailingComma,
        pos: node.templateSpans.pos,
        end: node.templateSpans.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TemplateSpan(node: ts.TemplateSpan) {
    return this.factory.TemplateSpan({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      literal: this.visit(node.literal),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ParenthesizedExpression(node: ts.ParenthesizedExpression) {
    return this.factory.ParenthesizedExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ArrayLiteralExpression(node: ts.ArrayLiteralExpression) {
    return this.factory.ArrayLiteralExpression({
      kind: node.kind,
      elements: assignAndMapElements(node.elements, this.visit.bind(this), {
        hasTrailingComma: node.elements.hasTrailingComma === undefined ? undefined : node.elements.hasTrailingComma,
        pos: node.elements.pos,
        end: node.elements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  SpreadElement(node: ts.SpreadElement) {
    return this.factory.SpreadElement({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ObjectLiteralExpression(node: ts.ObjectLiteralExpression) {
    return this.factory.ObjectLiteralExpression({
      kind: node.kind,
      properties: assignAndMapElements(node.properties, this.visit.bind(this), {
        hasTrailingComma: node.properties.hasTrailingComma === undefined ? undefined : node.properties.hasTrailingComma,
        pos: node.properties.pos,
        end: node.properties.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  PropertyAccessExpression(node: ts.PropertyAccessExpression) {
    return this.factory.PropertyAccessExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      name: this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ElementAccessExpression(node: ts.ElementAccessExpression) {
    return this.factory.ElementAccessExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      argumentExpression: node.argumentExpression === undefined ? undefined : {
        kind: node.argumentExpression.kind,
        flags: node.argumentExpression.flags,
        decorators: node.argumentExpression.decorators === undefined ? undefined : assignAndMapElements(node.argumentExpression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.argumentExpression.decorators.hasTrailingComma === undefined ? undefined : node.argumentExpression.decorators.hasTrailingComma,
          pos: node.argumentExpression.decorators.pos,
          end: node.argumentExpression.decorators.end,
        }),
        modifiers: node.argumentExpression.modifiers === undefined ? undefined : assignAndMapElements(node.argumentExpression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.argumentExpression.modifiers.hasTrailingComma === undefined ? undefined : node.argumentExpression.modifiers.hasTrailingComma,
          pos: node.argumentExpression.modifiers.pos,
          end: node.argumentExpression.modifiers.end,
        }),
        parent: node.argumentExpression.parent === undefined ? undefined : this.visit(node.argumentExpression.parent),
        pos: node.argumentExpression.pos,
        end: node.argumentExpression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  CallExpression(node: ts.CallExpression) {
    return this.factory.CallExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      typeArguments: node.typeArguments === undefined ? undefined : assignAndMapElements(node.typeArguments, this.visit.bind(this), {
        hasTrailingComma: node.typeArguments.hasTrailingComma === undefined ? undefined : node.typeArguments.hasTrailingComma,
        pos: node.typeArguments.pos,
        end: node.typeArguments.end,
      }),
      arguments: assignAndMapElements(node.arguments, this.visit.bind(this), {
        hasTrailingComma: node.arguments.hasTrailingComma === undefined ? undefined : node.arguments.hasTrailingComma,
        pos: node.arguments.pos,
        end: node.arguments.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ExpressionWithTypeArguments(node: ts.ExpressionWithTypeArguments) {
    return this.factory.ExpressionWithTypeArguments({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      typeArguments: node.typeArguments === undefined ? undefined : assignAndMapElements(node.typeArguments, this.visit.bind(this), {
        hasTrailingComma: node.typeArguments.hasTrailingComma === undefined ? undefined : node.typeArguments.hasTrailingComma,
        pos: node.typeArguments.pos,
        end: node.typeArguments.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  NewExpression(node: ts.NewExpression) {
    return this.factory.NewExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      typeArguments: node.typeArguments === undefined ? undefined : assignAndMapElements(node.typeArguments, this.visit.bind(this), {
        hasTrailingComma: node.typeArguments.hasTrailingComma === undefined ? undefined : node.typeArguments.hasTrailingComma,
        pos: node.typeArguments.pos,
        end: node.typeArguments.end,
      }),
      arguments: node.arguments === undefined ? undefined : assignAndMapElements(node.arguments, this.visit.bind(this), {
        hasTrailingComma: node.arguments.hasTrailingComma === undefined ? undefined : node.arguments.hasTrailingComma,
        pos: node.arguments.pos,
        end: node.arguments.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TaggedTemplateExpression(node: ts.TaggedTemplateExpression) {
    return this.factory.TaggedTemplateExpression({
      kind: node.kind,
      tag: {
        kind: node.tag.kind,
        flags: node.tag.flags,
        decorators: node.tag.decorators === undefined ? undefined : assignAndMapElements(node.tag.decorators, this.visit.bind(this), {
          hasTrailingComma: node.tag.decorators.hasTrailingComma === undefined ? undefined : node.tag.decorators.hasTrailingComma,
          pos: node.tag.decorators.pos,
          end: node.tag.decorators.end,
        }),
        modifiers: node.tag.modifiers === undefined ? undefined : assignAndMapElements(node.tag.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.tag.modifiers.hasTrailingComma === undefined ? undefined : node.tag.modifiers.hasTrailingComma,
          pos: node.tag.modifiers.pos,
          end: node.tag.modifiers.end,
        }),
        parent: node.tag.parent === undefined ? undefined : this.visit(node.tag.parent),
        pos: node.tag.pos,
        end: node.tag.end,
      },
      template: this.visit(node.template),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  AsExpression(node: ts.AsExpression) {
    return this.factory.AsExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TypeAssertion(node: ts.TypeAssertion) {
    return this.factory.TypeAssertion({
      kind: node.kind,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  NonNullExpression(node: ts.NonNullExpression) {
    return this.factory.NonNullExpression({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  MetaProperty(node: ts.MetaProperty) {
    return this.factory.MetaProperty({
      kind: node.kind,
      keywordToken: node.keywordToken,
      name: this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JsxElement(node: ts.JsxElement) {
    return this.factory.JsxElement({
      kind: node.kind,
      openingElement: this.visit(node.openingElement),
      children: assignAndMapElements(node.children, this.visit.bind(this), {
        hasTrailingComma: node.children.hasTrailingComma === undefined ? undefined : node.children.hasTrailingComma,
        pos: node.children.pos,
        end: node.children.end,
      }),
      closingElement: this.visit(node.closingElement),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JsxOpeningElement(node: ts.JsxOpeningElement) {
    return this.factory.JsxOpeningElement({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      tagName: this.visit(node.tagName),
      attributes: {
        parent: node.attributes.parent === undefined ? undefined : this.visit(node.attributes.parent),
        properties: assignAndMapElements(node.attributes.properties, this.visit.bind(this), {
          hasTrailingComma: node.attributes.properties.hasTrailingComma === undefined ? undefined : node.attributes.properties.hasTrailingComma,
          pos: node.attributes.properties.pos,
          end: node.attributes.properties.end,
        }),
        kind: node.attributes.kind,
        flags: node.attributes.flags,
        decorators: node.attributes.decorators === undefined ? undefined : assignAndMapElements(node.attributes.decorators, this.visit.bind(this), {
          hasTrailingComma: node.attributes.decorators.hasTrailingComma === undefined ? undefined : node.attributes.decorators.hasTrailingComma,
          pos: node.attributes.decorators.pos,
          end: node.attributes.decorators.end,
        }),
        modifiers: node.attributes.modifiers === undefined ? undefined : assignAndMapElements(node.attributes.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.attributes.modifiers.hasTrailingComma === undefined ? undefined : node.attributes.modifiers.hasTrailingComma,
          pos: node.attributes.modifiers.pos,
          end: node.attributes.modifiers.end,
        }),
        pos: node.attributes.pos,
        end: node.attributes.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JsxSelfClosingElement(node: ts.JsxSelfClosingElement) {
    return this.factory.JsxSelfClosingElement({
      kind: node.kind,
      tagName: this.visit(node.tagName),
      attributes: {
        parent: node.attributes.parent === undefined ? undefined : this.visit(node.attributes.parent),
        properties: assignAndMapElements(node.attributes.properties, this.visit.bind(this), {
          hasTrailingComma: node.attributes.properties.hasTrailingComma === undefined ? undefined : node.attributes.properties.hasTrailingComma,
          pos: node.attributes.properties.pos,
          end: node.attributes.properties.end,
        }),
        kind: node.attributes.kind,
        flags: node.attributes.flags,
        decorators: node.attributes.decorators === undefined ? undefined : assignAndMapElements(node.attributes.decorators, this.visit.bind(this), {
          hasTrailingComma: node.attributes.decorators.hasTrailingComma === undefined ? undefined : node.attributes.decorators.hasTrailingComma,
          pos: node.attributes.decorators.pos,
          end: node.attributes.decorators.end,
        }),
        modifiers: node.attributes.modifiers === undefined ? undefined : assignAndMapElements(node.attributes.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.attributes.modifiers.hasTrailingComma === undefined ? undefined : node.attributes.modifiers.hasTrailingComma,
          pos: node.attributes.modifiers.pos,
          end: node.attributes.modifiers.end,
        }),
        pos: node.attributes.pos,
        end: node.attributes.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JsxAttribute(node: ts.JsxAttribute) {
    return this.factory.JsxAttribute({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : {
        parent: node.parent.parent === undefined ? undefined : this.visit(node.parent.parent),
        properties: assignAndMapElements(node.parent.properties, this.visit.bind(this), {
          hasTrailingComma: node.parent.properties.hasTrailingComma === undefined ? undefined : node.parent.properties.hasTrailingComma,
          pos: node.parent.properties.pos,
          end: node.parent.properties.end,
        }),
        kind: node.parent.kind,
        flags: node.parent.flags,
        decorators: node.parent.decorators === undefined ? undefined : assignAndMapElements(node.parent.decorators, this.visit.bind(this), {
          hasTrailingComma: node.parent.decorators.hasTrailingComma === undefined ? undefined : node.parent.decorators.hasTrailingComma,
          pos: node.parent.decorators.pos,
          end: node.parent.decorators.end,
        }),
        modifiers: node.parent.modifiers === undefined ? undefined : assignAndMapElements(node.parent.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.parent.modifiers.hasTrailingComma === undefined ? undefined : node.parent.modifiers.hasTrailingComma,
          pos: node.parent.modifiers.pos,
          end: node.parent.modifiers.end,
        }),
        pos: node.parent.pos,
        end: node.parent.end,
      },
      name: this.visit(node.name),
      initializer: node.initializer === undefined ? undefined : this.visit(node.initializer),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JsxSpreadAttribute(node: ts.JsxSpreadAttribute) {
    return this.factory.JsxSpreadAttribute({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : {
        parent: node.parent.parent === undefined ? undefined : this.visit(node.parent.parent),
        properties: assignAndMapElements(node.parent.properties, this.visit.bind(this), {
          hasTrailingComma: node.parent.properties.hasTrailingComma === undefined ? undefined : node.parent.properties.hasTrailingComma,
          pos: node.parent.properties.pos,
          end: node.parent.properties.end,
        }),
        kind: node.parent.kind,
        flags: node.parent.flags,
        decorators: node.parent.decorators === undefined ? undefined : assignAndMapElements(node.parent.decorators, this.visit.bind(this), {
          hasTrailingComma: node.parent.decorators.hasTrailingComma === undefined ? undefined : node.parent.decorators.hasTrailingComma,
          pos: node.parent.decorators.pos,
          end: node.parent.decorators.end,
        }),
        modifiers: node.parent.modifiers === undefined ? undefined : assignAndMapElements(node.parent.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.parent.modifiers.hasTrailingComma === undefined ? undefined : node.parent.modifiers.hasTrailingComma,
          pos: node.parent.modifiers.pos,
          end: node.parent.modifiers.end,
        }),
        pos: node.parent.pos,
        end: node.parent.end,
      },
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      name: node.name === undefined ? undefined : this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JsxClosingElement(node: ts.JsxClosingElement) {
    return this.factory.JsxClosingElement({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      tagName: this.visit(node.tagName),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JsxExpression(node: ts.JsxExpression) {
    return this.factory.JsxExpression({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      dotDotDotToken: node.dotDotDotToken === undefined ? undefined : this.visit(node.dotDotDotToken),
      expression: node.expression === undefined ? undefined : {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JsxText(node: ts.JsxText) {
    return this.factory.JsxText({
      kind: node.kind,
      containsOnlyWhiteSpaces: node.containsOnlyWhiteSpaces,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  NotEmittedStatement(node: ts.NotEmittedStatement) {
    return this.factory.NotEmittedStatement({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  CommaListExpression(node: ts.CommaListExpression) {
    return this.factory.CommaListExpression({
      kind: node.kind,
      elements: assignAndMapElements(node.elements, this.visit.bind(this), {
        hasTrailingComma: node.elements.hasTrailingComma === undefined ? undefined : node.elements.hasTrailingComma,
        pos: node.elements.pos,
        end: node.elements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  EmptyStatement(node: ts.EmptyStatement) {
    return this.factory.EmptyStatement({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  DebuggerStatement(node: ts.DebuggerStatement) {
    return this.factory.DebuggerStatement({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  MissingDeclaration(node: ts.MissingDeclaration) {
    return this.factory.MissingDeclaration({
      kind: node.kind,
      name: node.name === undefined ? undefined : this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
    })
  }

  Block(node: ts.Block) {
    return this.factory.Block({
      kind: node.kind,
      statements: assignAndMapElements(node.statements, this.visit.bind(this), {
        hasTrailingComma: node.statements.hasTrailingComma === undefined ? undefined : node.statements.hasTrailingComma,
        pos: node.statements.pos,
        end: node.statements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  VariableStatement(node: ts.VariableStatement) {
    return this.factory.VariableStatement({
      kind: node.kind,
      declarationList: this.visit(node.declarationList),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ExpressionStatement(node: ts.ExpressionStatement) {
    return this.factory.ExpressionStatement({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  IfStatement(node: ts.IfStatement) {
    return this.factory.IfStatement({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      thenStatement: {
        kind: node.thenStatement.kind,
        flags: node.thenStatement.flags,
        decorators: node.thenStatement.decorators === undefined ? undefined : assignAndMapElements(node.thenStatement.decorators, this.visit.bind(this), {
          hasTrailingComma: node.thenStatement.decorators.hasTrailingComma === undefined ? undefined : node.thenStatement.decorators.hasTrailingComma,
          pos: node.thenStatement.decorators.pos,
          end: node.thenStatement.decorators.end,
        }),
        modifiers: node.thenStatement.modifiers === undefined ? undefined : assignAndMapElements(node.thenStatement.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.thenStatement.modifiers.hasTrailingComma === undefined ? undefined : node.thenStatement.modifiers.hasTrailingComma,
          pos: node.thenStatement.modifiers.pos,
          end: node.thenStatement.modifiers.end,
        }),
        parent: node.thenStatement.parent === undefined ? undefined : this.visit(node.thenStatement.parent),
        pos: node.thenStatement.pos,
        end: node.thenStatement.end,
      },
      elseStatement: node.elseStatement === undefined ? undefined : {
        kind: node.elseStatement.kind,
        flags: node.elseStatement.flags,
        decorators: node.elseStatement.decorators === undefined ? undefined : assignAndMapElements(node.elseStatement.decorators, this.visit.bind(this), {
          hasTrailingComma: node.elseStatement.decorators.hasTrailingComma === undefined ? undefined : node.elseStatement.decorators.hasTrailingComma,
          pos: node.elseStatement.decorators.pos,
          end: node.elseStatement.decorators.end,
        }),
        modifiers: node.elseStatement.modifiers === undefined ? undefined : assignAndMapElements(node.elseStatement.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.elseStatement.modifiers.hasTrailingComma === undefined ? undefined : node.elseStatement.modifiers.hasTrailingComma,
          pos: node.elseStatement.modifiers.pos,
          end: node.elseStatement.modifiers.end,
        }),
        parent: node.elseStatement.parent === undefined ? undefined : this.visit(node.elseStatement.parent),
        pos: node.elseStatement.pos,
        end: node.elseStatement.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  DoStatement(node: ts.DoStatement) {
    return this.factory.DoStatement({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      statement: {
        kind: node.statement.kind,
        flags: node.statement.flags,
        decorators: node.statement.decorators === undefined ? undefined : assignAndMapElements(node.statement.decorators, this.visit.bind(this), {
          hasTrailingComma: node.statement.decorators.hasTrailingComma === undefined ? undefined : node.statement.decorators.hasTrailingComma,
          pos: node.statement.decorators.pos,
          end: node.statement.decorators.end,
        }),
        modifiers: node.statement.modifiers === undefined ? undefined : assignAndMapElements(node.statement.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.statement.modifiers.hasTrailingComma === undefined ? undefined : node.statement.modifiers.hasTrailingComma,
          pos: node.statement.modifiers.pos,
          end: node.statement.modifiers.end,
        }),
        parent: node.statement.parent === undefined ? undefined : this.visit(node.statement.parent),
        pos: node.statement.pos,
        end: node.statement.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  WhileStatement(node: ts.WhileStatement) {
    return this.factory.WhileStatement({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      statement: {
        kind: node.statement.kind,
        flags: node.statement.flags,
        decorators: node.statement.decorators === undefined ? undefined : assignAndMapElements(node.statement.decorators, this.visit.bind(this), {
          hasTrailingComma: node.statement.decorators.hasTrailingComma === undefined ? undefined : node.statement.decorators.hasTrailingComma,
          pos: node.statement.decorators.pos,
          end: node.statement.decorators.end,
        }),
        modifiers: node.statement.modifiers === undefined ? undefined : assignAndMapElements(node.statement.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.statement.modifiers.hasTrailingComma === undefined ? undefined : node.statement.modifiers.hasTrailingComma,
          pos: node.statement.modifiers.pos,
          end: node.statement.modifiers.end,
        }),
        parent: node.statement.parent === undefined ? undefined : this.visit(node.statement.parent),
        pos: node.statement.pos,
        end: node.statement.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ForStatement(node: ts.ForStatement) {
    return this.factory.ForStatement({
      kind: node.kind,
      initializer: node.initializer === undefined ? undefined : this.visit(node.initializer),
      condition: node.condition === undefined ? undefined : {
        kind: node.condition.kind,
        flags: node.condition.flags,
        decorators: node.condition.decorators === undefined ? undefined : assignAndMapElements(node.condition.decorators, this.visit.bind(this), {
          hasTrailingComma: node.condition.decorators.hasTrailingComma === undefined ? undefined : node.condition.decorators.hasTrailingComma,
          pos: node.condition.decorators.pos,
          end: node.condition.decorators.end,
        }),
        modifiers: node.condition.modifiers === undefined ? undefined : assignAndMapElements(node.condition.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.condition.modifiers.hasTrailingComma === undefined ? undefined : node.condition.modifiers.hasTrailingComma,
          pos: node.condition.modifiers.pos,
          end: node.condition.modifiers.end,
        }),
        parent: node.condition.parent === undefined ? undefined : this.visit(node.condition.parent),
        pos: node.condition.pos,
        end: node.condition.end,
      },
      incrementor: node.incrementor === undefined ? undefined : {
        kind: node.incrementor.kind,
        flags: node.incrementor.flags,
        decorators: node.incrementor.decorators === undefined ? undefined : assignAndMapElements(node.incrementor.decorators, this.visit.bind(this), {
          hasTrailingComma: node.incrementor.decorators.hasTrailingComma === undefined ? undefined : node.incrementor.decorators.hasTrailingComma,
          pos: node.incrementor.decorators.pos,
          end: node.incrementor.decorators.end,
        }),
        modifiers: node.incrementor.modifiers === undefined ? undefined : assignAndMapElements(node.incrementor.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.incrementor.modifiers.hasTrailingComma === undefined ? undefined : node.incrementor.modifiers.hasTrailingComma,
          pos: node.incrementor.modifiers.pos,
          end: node.incrementor.modifiers.end,
        }),
        parent: node.incrementor.parent === undefined ? undefined : this.visit(node.incrementor.parent),
        pos: node.incrementor.pos,
        end: node.incrementor.end,
      },
      statement: {
        kind: node.statement.kind,
        flags: node.statement.flags,
        decorators: node.statement.decorators === undefined ? undefined : assignAndMapElements(node.statement.decorators, this.visit.bind(this), {
          hasTrailingComma: node.statement.decorators.hasTrailingComma === undefined ? undefined : node.statement.decorators.hasTrailingComma,
          pos: node.statement.decorators.pos,
          end: node.statement.decorators.end,
        }),
        modifiers: node.statement.modifiers === undefined ? undefined : assignAndMapElements(node.statement.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.statement.modifiers.hasTrailingComma === undefined ? undefined : node.statement.modifiers.hasTrailingComma,
          pos: node.statement.modifiers.pos,
          end: node.statement.modifiers.end,
        }),
        parent: node.statement.parent === undefined ? undefined : this.visit(node.statement.parent),
        pos: node.statement.pos,
        end: node.statement.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ForInStatement(node: ts.ForInStatement) {
    return this.factory.ForInStatement({
      kind: node.kind,
      initializer: this.visit(node.initializer),
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      statement: {
        kind: node.statement.kind,
        flags: node.statement.flags,
        decorators: node.statement.decorators === undefined ? undefined : assignAndMapElements(node.statement.decorators, this.visit.bind(this), {
          hasTrailingComma: node.statement.decorators.hasTrailingComma === undefined ? undefined : node.statement.decorators.hasTrailingComma,
          pos: node.statement.decorators.pos,
          end: node.statement.decorators.end,
        }),
        modifiers: node.statement.modifiers === undefined ? undefined : assignAndMapElements(node.statement.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.statement.modifiers.hasTrailingComma === undefined ? undefined : node.statement.modifiers.hasTrailingComma,
          pos: node.statement.modifiers.pos,
          end: node.statement.modifiers.end,
        }),
        parent: node.statement.parent === undefined ? undefined : this.visit(node.statement.parent),
        pos: node.statement.pos,
        end: node.statement.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ForOfStatement(node: ts.ForOfStatement) {
    return this.factory.ForOfStatement({
      kind: node.kind,
      awaitModifier: node.awaitModifier === undefined ? undefined : this.visit(node.awaitModifier),
      initializer: this.visit(node.initializer),
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      statement: {
        kind: node.statement.kind,
        flags: node.statement.flags,
        decorators: node.statement.decorators === undefined ? undefined : assignAndMapElements(node.statement.decorators, this.visit.bind(this), {
          hasTrailingComma: node.statement.decorators.hasTrailingComma === undefined ? undefined : node.statement.decorators.hasTrailingComma,
          pos: node.statement.decorators.pos,
          end: node.statement.decorators.end,
        }),
        modifiers: node.statement.modifiers === undefined ? undefined : assignAndMapElements(node.statement.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.statement.modifiers.hasTrailingComma === undefined ? undefined : node.statement.modifiers.hasTrailingComma,
          pos: node.statement.modifiers.pos,
          end: node.statement.modifiers.end,
        }),
        parent: node.statement.parent === undefined ? undefined : this.visit(node.statement.parent),
        pos: node.statement.pos,
        end: node.statement.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  BreakStatement(node: ts.BreakStatement) {
    return this.factory.BreakStatement({
      kind: node.kind,
      label: node.label === undefined ? undefined : this.visit(node.label),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ContinueStatement(node: ts.ContinueStatement) {
    return this.factory.ContinueStatement({
      kind: node.kind,
      label: node.label === undefined ? undefined : this.visit(node.label),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ReturnStatement(node: ts.ReturnStatement) {
    return this.factory.ReturnStatement({
      kind: node.kind,
      expression: node.expression === undefined ? undefined : {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  WithStatement(node: ts.WithStatement) {
    return this.factory.WithStatement({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      statement: {
        kind: node.statement.kind,
        flags: node.statement.flags,
        decorators: node.statement.decorators === undefined ? undefined : assignAndMapElements(node.statement.decorators, this.visit.bind(this), {
          hasTrailingComma: node.statement.decorators.hasTrailingComma === undefined ? undefined : node.statement.decorators.hasTrailingComma,
          pos: node.statement.decorators.pos,
          end: node.statement.decorators.end,
        }),
        modifiers: node.statement.modifiers === undefined ? undefined : assignAndMapElements(node.statement.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.statement.modifiers.hasTrailingComma === undefined ? undefined : node.statement.modifiers.hasTrailingComma,
          pos: node.statement.modifiers.pos,
          end: node.statement.modifiers.end,
        }),
        parent: node.statement.parent === undefined ? undefined : this.visit(node.statement.parent),
        pos: node.statement.pos,
        end: node.statement.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  SwitchStatement(node: ts.SwitchStatement) {
    return this.factory.SwitchStatement({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      caseBlock: this.visit(node.caseBlock),
      possiblyExhaustive: node.possiblyExhaustive === undefined ? undefined : node.possiblyExhaustive,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  CaseBlock(node: ts.CaseBlock) {
    return this.factory.CaseBlock({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      clauses: assignAndMapElements(node.clauses, this.visit.bind(this), {
        hasTrailingComma: node.clauses.hasTrailingComma === undefined ? undefined : node.clauses.hasTrailingComma,
        pos: node.clauses.pos,
        end: node.clauses.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  CaseClause(node: ts.CaseClause) {
    return this.factory.CaseClause({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      statements: assignAndMapElements(node.statements, this.visit.bind(this), {
        hasTrailingComma: node.statements.hasTrailingComma === undefined ? undefined : node.statements.hasTrailingComma,
        pos: node.statements.pos,
        end: node.statements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  DefaultClause(node: ts.DefaultClause) {
    return this.factory.DefaultClause({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      statements: assignAndMapElements(node.statements, this.visit.bind(this), {
        hasTrailingComma: node.statements.hasTrailingComma === undefined ? undefined : node.statements.hasTrailingComma,
        pos: node.statements.pos,
        end: node.statements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  LabeledStatement(node: ts.LabeledStatement) {
    return this.factory.LabeledStatement({
      kind: node.kind,
      label: this.visit(node.label),
      statement: {
        kind: node.statement.kind,
        flags: node.statement.flags,
        decorators: node.statement.decorators === undefined ? undefined : assignAndMapElements(node.statement.decorators, this.visit.bind(this), {
          hasTrailingComma: node.statement.decorators.hasTrailingComma === undefined ? undefined : node.statement.decorators.hasTrailingComma,
          pos: node.statement.decorators.pos,
          end: node.statement.decorators.end,
        }),
        modifiers: node.statement.modifiers === undefined ? undefined : assignAndMapElements(node.statement.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.statement.modifiers.hasTrailingComma === undefined ? undefined : node.statement.modifiers.hasTrailingComma,
          pos: node.statement.modifiers.pos,
          end: node.statement.modifiers.end,
        }),
        parent: node.statement.parent === undefined ? undefined : this.visit(node.statement.parent),
        pos: node.statement.pos,
        end: node.statement.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ThrowStatement(node: ts.ThrowStatement) {
    return this.factory.ThrowStatement({
      kind: node.kind,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  TryStatement(node: ts.TryStatement) {
    return this.factory.TryStatement({
      kind: node.kind,
      tryBlock: this.visit(node.tryBlock),
      catchClause: node.catchClause === undefined ? undefined : this.visit(node.catchClause),
      finallyBlock: node.finallyBlock === undefined ? undefined : this.visit(node.finallyBlock),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  CatchClause(node: ts.CatchClause) {
    return this.factory.CatchClause({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      variableDeclaration: this.visit(node.variableDeclaration),
      block: this.visit(node.block),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ClassDeclaration(node: ts.ClassDeclaration) {
    return this.factory.ClassDeclaration({
      kind: node.kind,
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      heritageClauses: node.heritageClauses === undefined ? undefined : assignAndMapElements(node.heritageClauses, this.visit.bind(this), {
        hasTrailingComma: node.heritageClauses.hasTrailingComma === undefined ? undefined : node.heritageClauses.hasTrailingComma,
        pos: node.heritageClauses.pos,
        end: node.heritageClauses.end,
      }),
      members: assignAndMapElements(node.members, this.visit.bind(this), {
        hasTrailingComma: node.members.hasTrailingComma === undefined ? undefined : node.members.hasTrailingComma,
        pos: node.members.pos,
        end: node.members.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ClassExpression(node: ts.ClassExpression) {
    return this.factory.ClassExpression({
      kind: node.kind,
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      heritageClauses: node.heritageClauses === undefined ? undefined : assignAndMapElements(node.heritageClauses, this.visit.bind(this), {
        hasTrailingComma: node.heritageClauses.hasTrailingComma === undefined ? undefined : node.heritageClauses.hasTrailingComma,
        pos: node.heritageClauses.pos,
        end: node.heritageClauses.end,
      }),
      members: assignAndMapElements(node.members, this.visit.bind(this), {
        hasTrailingComma: node.members.hasTrailingComma === undefined ? undefined : node.members.hasTrailingComma,
        pos: node.members.pos,
        end: node.members.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  InterfaceDeclaration(node: ts.InterfaceDeclaration) {
    return this.factory.InterfaceDeclaration({
      kind: node.kind,
      name: this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      heritageClauses: node.heritageClauses === undefined ? undefined : assignAndMapElements(node.heritageClauses, this.visit.bind(this), {
        hasTrailingComma: node.heritageClauses.hasTrailingComma === undefined ? undefined : node.heritageClauses.hasTrailingComma,
        pos: node.heritageClauses.pos,
        end: node.heritageClauses.end,
      }),
      members: assignAndMapElements(node.members, this.visit.bind(this), {
        hasTrailingComma: node.members.hasTrailingComma === undefined ? undefined : node.members.hasTrailingComma,
        pos: node.members.pos,
        end: node.members.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  HeritageClause(node: ts.HeritageClause) {
    return this.factory.HeritageClause({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      token: node.token,
      types: assignAndMapElements(node.types, this.visit.bind(this), {
        hasTrailingComma: node.types.hasTrailingComma === undefined ? undefined : node.types.hasTrailingComma,
        pos: node.types.pos,
        end: node.types.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  TypeAliasDeclaration(node: ts.TypeAliasDeclaration) {
    return this.factory.TypeAliasDeclaration({
      kind: node.kind,
      name: this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  EnumMember(node: ts.EnumMember) {
    return this.factory.EnumMember({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: this.visit(node.name),
      initializer: node.initializer === undefined ? undefined : {
        kind: node.initializer.kind,
        flags: node.initializer.flags,
        decorators: node.initializer.decorators === undefined ? undefined : assignAndMapElements(node.initializer.decorators, this.visit.bind(this), {
          hasTrailingComma: node.initializer.decorators.hasTrailingComma === undefined ? undefined : node.initializer.decorators.hasTrailingComma,
          pos: node.initializer.decorators.pos,
          end: node.initializer.decorators.end,
        }),
        modifiers: node.initializer.modifiers === undefined ? undefined : assignAndMapElements(node.initializer.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.initializer.modifiers.hasTrailingComma === undefined ? undefined : node.initializer.modifiers.hasTrailingComma,
          pos: node.initializer.modifiers.pos,
          end: node.initializer.modifiers.end,
        }),
        parent: node.initializer.parent === undefined ? undefined : this.visit(node.initializer.parent),
        pos: node.initializer.pos,
        end: node.initializer.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  EnumDeclaration(node: ts.EnumDeclaration) {
    return this.factory.EnumDeclaration({
      kind: node.kind,
      name: this.visit(node.name),
      members: assignAndMapElements(node.members, this.visit.bind(this), {
        hasTrailingComma: node.members.hasTrailingComma === undefined ? undefined : node.members.hasTrailingComma,
        pos: node.members.pos,
        end: node.members.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ModuleDeclaration(node: ts.ModuleDeclaration) {
    return this.factory.ModuleDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: this.visit(node.name),
      body: node.body === undefined ? undefined : this.visit(node.body),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ModuleBlock(node: ts.ModuleBlock) {
    return this.factory.ModuleBlock({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      statements: assignAndMapElements(node.statements, this.visit.bind(this), {
        hasTrailingComma: node.statements.hasTrailingComma === undefined ? undefined : node.statements.hasTrailingComma,
        pos: node.statements.pos,
        end: node.statements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ImportEqualsDeclaration(node: ts.ImportEqualsDeclaration) {
    return this.factory.ImportEqualsDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: this.visit(node.name),
      moduleReference: this.visit(node.moduleReference),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ExternalModuleReference(node: ts.ExternalModuleReference) {
    return this.factory.ExternalModuleReference({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      expression: node.expression === undefined ? undefined : {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ImportDeclaration(node: ts.ImportDeclaration) {
    return this.factory.ImportDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      importClause: node.importClause === undefined ? undefined : this.visit(node.importClause),
      moduleSpecifier: {
        kind: node.moduleSpecifier.kind,
        flags: node.moduleSpecifier.flags,
        decorators: node.moduleSpecifier.decorators === undefined ? undefined : assignAndMapElements(node.moduleSpecifier.decorators, this.visit.bind(this), {
          hasTrailingComma: node.moduleSpecifier.decorators.hasTrailingComma === undefined ? undefined : node.moduleSpecifier.decorators.hasTrailingComma,
          pos: node.moduleSpecifier.decorators.pos,
          end: node.moduleSpecifier.decorators.end,
        }),
        modifiers: node.moduleSpecifier.modifiers === undefined ? undefined : assignAndMapElements(node.moduleSpecifier.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.moduleSpecifier.modifiers.hasTrailingComma === undefined ? undefined : node.moduleSpecifier.modifiers.hasTrailingComma,
          pos: node.moduleSpecifier.modifiers.pos,
          end: node.moduleSpecifier.modifiers.end,
        }),
        parent: node.moduleSpecifier.parent === undefined ? undefined : this.visit(node.moduleSpecifier.parent),
        pos: node.moduleSpecifier.pos,
        end: node.moduleSpecifier.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ImportClause(node: ts.ImportClause) {
    return this.factory.ImportClause({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: node.name === undefined ? undefined : this.visit(node.name),
      namedBindings: node.namedBindings === undefined ? undefined : this.visit(node.namedBindings),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  NamespaceImport(node: ts.NamespaceImport) {
    return this.factory.NamespaceImport({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      name: this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  NamespaceExportDeclaration(node: ts.NamespaceExportDeclaration) {
    return this.factory.NamespaceExportDeclaration({
      kind: node.kind,
      name: this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  ExportDeclaration(node: ts.ExportDeclaration) {
    return this.factory.ExportDeclaration({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      exportClause: node.exportClause === undefined ? undefined : this.visit(node.exportClause),
      moduleSpecifier: node.moduleSpecifier === undefined ? undefined : {
        kind: node.moduleSpecifier.kind,
        flags: node.moduleSpecifier.flags,
        decorators: node.moduleSpecifier.decorators === undefined ? undefined : assignAndMapElements(node.moduleSpecifier.decorators, this.visit.bind(this), {
          hasTrailingComma: node.moduleSpecifier.decorators.hasTrailingComma === undefined ? undefined : node.moduleSpecifier.decorators.hasTrailingComma,
          pos: node.moduleSpecifier.decorators.pos,
          end: node.moduleSpecifier.decorators.end,
        }),
        modifiers: node.moduleSpecifier.modifiers === undefined ? undefined : assignAndMapElements(node.moduleSpecifier.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.moduleSpecifier.modifiers.hasTrailingComma === undefined ? undefined : node.moduleSpecifier.modifiers.hasTrailingComma,
          pos: node.moduleSpecifier.modifiers.pos,
          end: node.moduleSpecifier.modifiers.end,
        }),
        parent: node.moduleSpecifier.parent === undefined ? undefined : this.visit(node.moduleSpecifier.parent),
        pos: node.moduleSpecifier.pos,
        end: node.moduleSpecifier.end,
      },
      name: node.name === undefined ? undefined : this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  NamedImports(node: ts.NamedImports) {
    return this.factory.NamedImports({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      elements: assignAndMapElements(node.elements, this.visit.bind(this), {
        hasTrailingComma: node.elements.hasTrailingComma === undefined ? undefined : node.elements.hasTrailingComma,
        pos: node.elements.pos,
        end: node.elements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  NamedExports(node: ts.NamedExports) {
    return this.factory.NamedExports({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      elements: assignAndMapElements(node.elements, this.visit.bind(this), {
        hasTrailingComma: node.elements.hasTrailingComma === undefined ? undefined : node.elements.hasTrailingComma,
        pos: node.elements.pos,
        end: node.elements.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ImportSpecifier(node: ts.ImportSpecifier) {
    return this.factory.ImportSpecifier({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      propertyName: node.propertyName === undefined ? undefined : this.visit(node.propertyName),
      name: this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ExportSpecifier(node: ts.ExportSpecifier) {
    return this.factory.ExportSpecifier({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      propertyName: node.propertyName === undefined ? undefined : this.visit(node.propertyName),
      name: this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  ExportAssignment(node: ts.ExportAssignment) {
    return this.factory.ExportAssignment({
      kind: node.kind,
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      isExportEquals: node.isExportEquals === undefined ? undefined : node.isExportEquals,
      expression: {
        kind: node.expression.kind,
        flags: node.expression.flags,
        decorators: node.expression.decorators === undefined ? undefined : assignAndMapElements(node.expression.decorators, this.visit.bind(this), {
          hasTrailingComma: node.expression.decorators.hasTrailingComma === undefined ? undefined : node.expression.decorators.hasTrailingComma,
          pos: node.expression.decorators.pos,
          end: node.expression.decorators.end,
        }),
        modifiers: node.expression.modifiers === undefined ? undefined : assignAndMapElements(node.expression.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.expression.modifiers.hasTrailingComma === undefined ? undefined : node.expression.modifiers.hasTrailingComma,
          pos: node.expression.modifiers.pos,
          end: node.expression.modifiers.end,
        }),
        parent: node.expression.parent === undefined ? undefined : this.visit(node.expression.parent),
        pos: node.expression.pos,
        end: node.expression.end,
      },
      name: node.name === undefined ? undefined : this.visit(node.name),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  CommentRange(node: ts.CommentRange) {
    return this.factory.CommentRange({
      hasTrailingNewLine: node.hasTrailingNewLine === undefined ? undefined : node.hasTrailingNewLine,
      kind: node.kind,
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocTypeExpression(node: ts.JSDocTypeExpression) {
    return this.factory.JSDocTypeExpression({
      kind: node.kind,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocAllType(node: ts.JSDocAllType) {
    return this.factory.JSDocAllType({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocUnknownType(node: ts.JSDocUnknownType) {
    return this.factory.JSDocUnknownType({
      kind: node.kind,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocArrayType(node: ts.JSDocArrayType) {
    return this.factory.JSDocArrayType({
      kind: node.kind,
      elementType: {
        kind: node.elementType.kind,
        flags: node.elementType.flags,
        decorators: node.elementType.decorators === undefined ? undefined : assignAndMapElements(node.elementType.decorators, this.visit.bind(this), {
          hasTrailingComma: node.elementType.decorators.hasTrailingComma === undefined ? undefined : node.elementType.decorators.hasTrailingComma,
          pos: node.elementType.decorators.pos,
          end: node.elementType.decorators.end,
        }),
        modifiers: node.elementType.modifiers === undefined ? undefined : assignAndMapElements(node.elementType.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.elementType.modifiers.hasTrailingComma === undefined ? undefined : node.elementType.modifiers.hasTrailingComma,
          pos: node.elementType.modifiers.pos,
          end: node.elementType.modifiers.end,
        }),
        parent: node.elementType.parent === undefined ? undefined : this.visit(node.elementType.parent),
        pos: node.elementType.pos,
        end: node.elementType.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocUnionType(node: ts.JSDocUnionType) {
    return this.factory.JSDocUnionType({
      kind: node.kind,
      types: assignAndMapElements(node.types, this.visit.bind(this), {
        hasTrailingComma: node.types.hasTrailingComma === undefined ? undefined : node.types.hasTrailingComma,
        pos: node.types.pos,
        end: node.types.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocTupleType(node: ts.JSDocTupleType) {
    return this.factory.JSDocTupleType({
      kind: node.kind,
      types: assignAndMapElements(node.types, this.visit.bind(this), {
        hasTrailingComma: node.types.hasTrailingComma === undefined ? undefined : node.types.hasTrailingComma,
        pos: node.types.pos,
        end: node.types.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocNonNullableType(node: ts.JSDocNonNullableType) {
    return this.factory.JSDocNonNullableType({
      kind: node.kind,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocNullableType(node: ts.JSDocNullableType) {
    return this.factory.JSDocNullableType({
      kind: node.kind,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocRecordType(node: ts.JSDocRecordType) {
    return this.factory.JSDocRecordType({
      kind: node.kind,
      literal: this.visit(node.literal),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocTypeReference(node: ts.JSDocTypeReference) {
    return this.factory.JSDocTypeReference({
      kind: node.kind,
      name: this.visit(node.name),
      typeArguments: assignAndMapElements(node.typeArguments, this.visit.bind(this), {
        hasTrailingComma: node.typeArguments.hasTrailingComma === undefined ? undefined : node.typeArguments.hasTrailingComma,
        pos: node.typeArguments.pos,
        end: node.typeArguments.end,
      }),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocOptionalType(node: ts.JSDocOptionalType) {
    return this.factory.JSDocOptionalType({
      kind: node.kind,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocFunctionType(node: ts.JSDocFunctionType) {
    return this.factory.JSDocFunctionType({
      kind: node.kind,
      parameters: assignAndMapElements(node.parameters, this.visit.bind(this), {
        hasTrailingComma: node.parameters.hasTrailingComma === undefined ? undefined : node.parameters.hasTrailingComma,
        pos: node.parameters.pos,
        end: node.parameters.end,
      }),
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeParameters: node.typeParameters === undefined ? undefined : assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
    })
  }

  JSDocVariadicType(node: ts.JSDocVariadicType) {
    return this.factory.JSDocVariadicType({
      kind: node.kind,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocConstructorType(node: ts.JSDocConstructorType) {
    return this.factory.JSDocConstructorType({
      kind: node.kind,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocThisType(node: ts.JSDocThisType) {
    return this.factory.JSDocThisType({
      kind: node.kind,
      type: {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocLiteralType(node: ts.JSDocLiteralType) {
    return this.factory.JSDocLiteralType({
      kind: node.kind,
      literal: this.visit(node.literal),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocRecordMember(node: ts.JSDocRecordMember) {
    return this.factory.JSDocRecordMember({
      kind: node.kind,
      name: this.visit(node.name),
      type: node.type === undefined ? undefined : {
        kind: node.type.kind,
        flags: node.type.flags,
        decorators: node.type.decorators === undefined ? undefined : assignAndMapElements(node.type.decorators, this.visit.bind(this), {
          hasTrailingComma: node.type.decorators.hasTrailingComma === undefined ? undefined : node.type.decorators.hasTrailingComma,
          pos: node.type.decorators.pos,
          end: node.type.decorators.end,
        }),
        modifiers: node.type.modifiers === undefined ? undefined : assignAndMapElements(node.type.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.type.modifiers.hasTrailingComma === undefined ? undefined : node.type.modifiers.hasTrailingComma,
          pos: node.type.modifiers.pos,
          end: node.type.modifiers.end,
        }),
        parent: node.type.parent === undefined ? undefined : this.visit(node.type.parent),
        pos: node.type.pos,
        end: node.type.end,
      },
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
      initializer: node.initializer === undefined ? undefined : {
        kind: node.initializer.kind,
        flags: node.initializer.flags,
        decorators: node.initializer.decorators === undefined ? undefined : assignAndMapElements(node.initializer.decorators, this.visit.bind(this), {
          hasTrailingComma: node.initializer.decorators.hasTrailingComma === undefined ? undefined : node.initializer.decorators.hasTrailingComma,
          pos: node.initializer.decorators.pos,
          end: node.initializer.decorators.end,
        }),
        modifiers: node.initializer.modifiers === undefined ? undefined : assignAndMapElements(node.initializer.modifiers, this.visit.bind(this), {
          hasTrailingComma: node.initializer.modifiers.hasTrailingComma === undefined ? undefined : node.initializer.modifiers.hasTrailingComma,
          pos: node.initializer.modifiers.pos,
          end: node.initializer.modifiers.end,
        }),
        parent: node.initializer.parent === undefined ? undefined : this.visit(node.initializer.parent),
        pos: node.initializer.pos,
        end: node.initializer.end,
      },
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDoc(node: ts.JSDoc) {
    return this.factory.JSDoc({
      kind: node.kind,
      tags: assignAndMapElements(node.tags, this.visit.bind(this), {
        hasTrailingComma: node.tags.hasTrailingComma === undefined ? undefined : node.tags.hasTrailingComma,
        pos: node.tags.pos,
        end: node.tags.end,
      }),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocUnknownTag(node: ts.JSDocUnknownTag) {
    return this.factory.JSDocUnknownTag({
      kind: node.kind,
      parent: this.visit(node.parent),
      atToken: this.visit(node.atToken),
      tagName: this.visit(node.tagName),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocAugmentsTag(node: ts.JSDocAugmentsTag) {
    return this.factory.JSDocAugmentsTag({
      kind: node.kind,
      typeExpression: this.visit(node.typeExpression),
      parent: this.visit(node.parent),
      atToken: this.visit(node.atToken),
      tagName: this.visit(node.tagName),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocClassTag(node: ts.JSDocClassTag) {
    return this.factory.JSDocClassTag({
      kind: node.kind,
      parent: this.visit(node.parent),
      atToken: this.visit(node.atToken),
      tagName: this.visit(node.tagName),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocTemplateTag(node: ts.JSDocTemplateTag) {
    return this.factory.JSDocTemplateTag({
      kind: node.kind,
      typeParameters: assignAndMapElements(node.typeParameters, this.visit.bind(this), {
        hasTrailingComma: node.typeParameters.hasTrailingComma === undefined ? undefined : node.typeParameters.hasTrailingComma,
        pos: node.typeParameters.pos,
        end: node.typeParameters.end,
      }),
      parent: this.visit(node.parent),
      atToken: this.visit(node.atToken),
      tagName: this.visit(node.tagName),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocReturnTag(node: ts.JSDocReturnTag) {
    return this.factory.JSDocReturnTag({
      kind: node.kind,
      typeExpression: this.visit(node.typeExpression),
      parent: this.visit(node.parent),
      atToken: this.visit(node.atToken),
      tagName: this.visit(node.tagName),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocTypeTag(node: ts.JSDocTypeTag) {
    return this.factory.JSDocTypeTag({
      kind: node.kind,
      typeExpression: this.visit(node.typeExpression),
      parent: this.visit(node.parent),
      atToken: this.visit(node.atToken),
      tagName: this.visit(node.tagName),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocTypedefTag(node: ts.JSDocTypedefTag) {
    return this.factory.JSDocTypedefTag({
      parent: this.visit(node.parent),
      kind: node.kind,
      fullName: node.fullName === undefined ? undefined : this.visit(node.fullName),
      name: node.name === undefined ? undefined : this.visit(node.name),
      typeExpression: node.typeExpression === undefined ? undefined : this.visit(node.typeExpression),
      jsDocTypeLiteral: node.jsDocTypeLiteral === undefined ? undefined : this.visit(node.jsDocTypeLiteral),
      atToken: this.visit(node.atToken),
      tagName: this.visit(node.tagName),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocPropertyTag(node: ts.JSDocPropertyTag) {
    return this.factory.JSDocPropertyTag({
      parent: this.visit(node.parent),
      kind: node.kind,
      name: this.visit(node.name),
      preParameterName: node.preParameterName === undefined ? undefined : this.visit(node.preParameterName),
      postParameterName: node.postParameterName === undefined ? undefined : this.visit(node.postParameterName),
      typeExpression: this.visit(node.typeExpression),
      isBracketed: node.isBracketed,
      atToken: this.visit(node.atToken),
      tagName: this.visit(node.tagName),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
      questionToken: node.questionToken === undefined ? undefined : this.visit(node.questionToken),
    })
  }

  JSDocTypeLiteral(node: ts.JSDocTypeLiteral) {
    return this.factory.JSDocTypeLiteral({
      kind: node.kind,
      jsDocPropertyTags: node.jsDocPropertyTags === undefined ? undefined : assignAndMapElements(node.jsDocPropertyTags, this.visit.bind(this), {
        hasTrailingComma: node.jsDocPropertyTags.hasTrailingComma === undefined ? undefined : node.jsDocPropertyTags.hasTrailingComma,
        pos: node.jsDocPropertyTags.pos,
        end: node.jsDocPropertyTags.end,
      }),
      jsDocTypeTag: node.jsDocTypeTag === undefined ? undefined : this.visit(node.jsDocTypeTag),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  JSDocParameterTag(node: ts.JSDocParameterTag) {
    return this.factory.JSDocParameterTag({
      kind: node.kind,
      preParameterName: node.preParameterName === undefined ? undefined : this.visit(node.preParameterName),
      typeExpression: node.typeExpression === undefined ? undefined : this.visit(node.typeExpression),
      postParameterName: node.postParameterName === undefined ? undefined : this.visit(node.postParameterName),
      name: this.visit(node.name),
      isBracketed: node.isBracketed,
      parent: this.visit(node.parent),
      atToken: this.visit(node.atToken),
      tagName: this.visit(node.tagName),
      comment: node.comment,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      pos: node.pos,
      end: node.end,
    })
  }

  SourceFile(node: ts.SourceFile) {
    return this.factory.SourceFile({
      kind: node.kind,
      statements: assignAndMapElements(node.statements, this.visit.bind(this), {
        hasTrailingComma: node.statements.hasTrailingComma === undefined ? undefined : node.statements.hasTrailingComma,
        pos: node.statements.pos,
        end: node.statements.end,
      }),
      endOfFileToken: this.visit(node.endOfFileToken),
      fileName: node.fileName,
      text: node.text,
      amdDependencies: assignAndMapElements(node.amdDependencies, this.visit.bind(this), node.amdDependencies),
      moduleName: node.moduleName,
      referencedFiles: assignAndMapElements(node.referencedFiles, this.visit.bind(this), node.referencedFiles),
      typeReferenceDirectives: assignAndMapElements(node.typeReferenceDirectives, this.visit.bind(this), node.typeReferenceDirectives),
      languageVariant: node.languageVariant,
      isDeclarationFile: node.isDeclarationFile,
      hasNoDefaultLib: node.hasNoDefaultLib,
      languageVersion: node.languageVersion,
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  Bundle(node: ts.Bundle) {
    return this.factory.Bundle({
      kind: node.kind,
      sourceFiles: assignAndMapElements(node.sourceFiles, this.visit.bind(this), node.sourceFiles),
      flags: node.flags,
      decorators: node.decorators === undefined ? undefined : assignAndMapElements(node.decorators, this.visit.bind(this), {
        hasTrailingComma: node.decorators.hasTrailingComma === undefined ? undefined : node.decorators.hasTrailingComma,
        pos: node.decorators.pos,
        end: node.decorators.end,
      }),
      modifiers: node.modifiers === undefined ? undefined : assignAndMapElements(node.modifiers, this.visit.bind(this), {
        hasTrailingComma: node.modifiers.hasTrailingComma === undefined ? undefined : node.modifiers.hasTrailingComma,
        pos: node.modifiers.pos,
        end: node.modifiers.end,
      }),
      parent: node.parent === undefined ? undefined : this.visit(node.parent),
      pos: node.pos,
      end: node.end,
    })
  }

  visit(val: any) {
    switch(val.kind) {
      case ts.SyntaxKind.NumericLiteral:
      return this.NumericLiteral(val)
      case ts.SyntaxKind.StringLiteral:
      return this.StringLiteral(val)
      case ts.SyntaxKind.JsxText:
      return this.JsxText(val)
      case ts.SyntaxKind.RegularExpressionLiteral:
      return this.RegularExpressionLiteral(val)
      case ts.SyntaxKind.NoSubstitutionTemplateLiteral:
      return this.NoSubstitutionTemplateLiteral(val)
      case ts.SyntaxKind.TemplateHead:
      return this.TemplateHead(val)
      case ts.SyntaxKind.TemplateMiddle:
      return this.TemplateMiddle(val)
      case ts.SyntaxKind.TemplateTail:
      return this.TemplateTail(val)
      case ts.SyntaxKind.Identifier:
      return this.Identifier(val)
      case ts.SyntaxKind.ImportKeyword:
      return this.ImportExpression(val)
      case ts.SyntaxKind.NullKeyword:
      return this.NullLiteral(val)
      case ts.SyntaxKind.SuperKeyword:
      return this.SuperExpression(val)
      case ts.SyntaxKind.ThisKeyword:
      return this.ThisExpression(val)
      case ts.SyntaxKind.QualifiedName:
      return this.QualifiedName(val)
      case ts.SyntaxKind.ComputedPropertyName:
      return this.ComputedPropertyName(val)
      case ts.SyntaxKind.TypeParameter:
      return this.TypeParameterDeclaration(val)
      case ts.SyntaxKind.Parameter:
      return this.ParameterDeclaration(val)
      case ts.SyntaxKind.Decorator:
      return this.Decorator(val)
      case ts.SyntaxKind.PropertyDeclaration:
      return this.PropertyDeclaration(val)
      case ts.SyntaxKind.MethodSignature:
      return this.MethodSignature(val)
      case ts.SyntaxKind.MethodDeclaration:
      return this.MethodDeclaration(val)
      case ts.SyntaxKind.Constructor:
      return this.ConstructorDeclaration(val)
      case ts.SyntaxKind.GetAccessor:
      return this.GetAccessorDeclaration(val)
      case ts.SyntaxKind.SetAccessor:
      return this.SetAccessorDeclaration(val)
      case ts.SyntaxKind.CallSignature:
      return this.CallSignatureDeclaration(val)
      case ts.SyntaxKind.ConstructSignature:
      return this.ConstructSignatureDeclaration(val)
      case ts.SyntaxKind.IndexSignature:
      return this.IndexSignatureDeclaration(val)
      case ts.SyntaxKind.TypePredicate:
      return this.TypePredicateNode(val)
      case ts.SyntaxKind.TypeReference:
      return this.TypeReferenceNode(val)
      case ts.SyntaxKind.FunctionType:
      return this.FunctionTypeNode(val)
      case ts.SyntaxKind.ConstructorType:
      return this.ConstructorTypeNode(val)
      case ts.SyntaxKind.TypeQuery:
      return this.TypeQueryNode(val)
      case ts.SyntaxKind.TypeLiteral:
      return this.TypeLiteralNode(val)
      case ts.SyntaxKind.ArrayType:
      return this.ArrayTypeNode(val)
      case ts.SyntaxKind.TupleType:
      return this.TupleTypeNode(val)
      case ts.SyntaxKind.UnionType:
      return this.UnionTypeNode(val)
      case ts.SyntaxKind.IntersectionType:
      return this.IntersectionTypeNode(val)
      case ts.SyntaxKind.ParenthesizedType:
      return this.ParenthesizedTypeNode(val)
      case ts.SyntaxKind.ThisType:
      return this.ThisTypeNode(val)
      case ts.SyntaxKind.TypeOperator:
      return this.TypeOperatorNode(val)
      case ts.SyntaxKind.IndexedAccessType:
      return this.IndexedAccessTypeNode(val)
      case ts.SyntaxKind.MappedType:
      return this.MappedTypeNode(val)
      case ts.SyntaxKind.LiteralType:
      return this.LiteralTypeNode(val)
      case ts.SyntaxKind.ObjectBindingPattern:
      return this.ObjectBindingPattern(val)
      case ts.SyntaxKind.ArrayBindingPattern:
      return this.ArrayBindingPattern(val)
      case ts.SyntaxKind.BindingElement:
      return this.BindingElement(val)
      case ts.SyntaxKind.ArrayLiteralExpression:
      return this.ArrayLiteralExpression(val)
      case ts.SyntaxKind.ObjectLiteralExpression:
      return this.ObjectLiteralExpression(val)
      case ts.SyntaxKind.PropertyAccessExpression:
      return this.PropertyAccessExpression(val)
      case ts.SyntaxKind.ElementAccessExpression:
      return this.ElementAccessExpression(val)
      case ts.SyntaxKind.CallExpression:
      return this.CallExpression(val)
      case ts.SyntaxKind.NewExpression:
      return this.NewExpression(val)
      case ts.SyntaxKind.TaggedTemplateExpression:
      return this.TaggedTemplateExpression(val)
      case ts.SyntaxKind.TypeAssertionExpression:
      return this.TypeAssertion(val)
      case ts.SyntaxKind.ParenthesizedExpression:
      return this.ParenthesizedExpression(val)
      case ts.SyntaxKind.FunctionExpression:
      return this.FunctionExpression(val)
      case ts.SyntaxKind.ArrowFunction:
      return this.ArrowFunction(val)
      case ts.SyntaxKind.DeleteExpression:
      return this.DeleteExpression(val)
      case ts.SyntaxKind.TypeOfExpression:
      return this.TypeOfExpression(val)
      case ts.SyntaxKind.VoidExpression:
      return this.VoidExpression(val)
      case ts.SyntaxKind.AwaitExpression:
      return this.AwaitExpression(val)
      case ts.SyntaxKind.PrefixUnaryExpression:
      return this.PrefixUnaryExpression(val)
      case ts.SyntaxKind.PostfixUnaryExpression:
      return this.PostfixUnaryExpression(val)
      case ts.SyntaxKind.BinaryExpression:
      return this.BinaryExpression(val)
      case ts.SyntaxKind.ConditionalExpression:
      return this.ConditionalExpression(val)
      case ts.SyntaxKind.TemplateExpression:
      return this.TemplateExpression(val)
      case ts.SyntaxKind.YieldExpression:
      return this.YieldExpression(val)
      case ts.SyntaxKind.SpreadElement:
      return this.SpreadElement(val)
      case ts.SyntaxKind.ClassExpression:
      return this.ClassExpression(val)
      case ts.SyntaxKind.OmittedExpression:
      return this.OmittedExpression(val)
      case ts.SyntaxKind.ExpressionWithTypeArguments:
      return this.ExpressionWithTypeArguments(val)
      case ts.SyntaxKind.AsExpression:
      return this.AsExpression(val)
      case ts.SyntaxKind.NonNullExpression:
      return this.NonNullExpression(val)
      case ts.SyntaxKind.MetaProperty:
      return this.MetaProperty(val)
      case ts.SyntaxKind.TemplateSpan:
      return this.TemplateSpan(val)
      case ts.SyntaxKind.SemicolonClassElement:
      return this.SemicolonClassElement(val)
      case ts.SyntaxKind.Block:
      return this.Block(val)
      case ts.SyntaxKind.VariableStatement:
      return this.VariableStatement(val)
      case ts.SyntaxKind.EmptyStatement:
      return this.EmptyStatement(val)
      case ts.SyntaxKind.ExpressionStatement:
      return this.ExpressionStatement(val)
      case ts.SyntaxKind.IfStatement:
      return this.IfStatement(val)
      case ts.SyntaxKind.DoStatement:
      return this.DoStatement(val)
      case ts.SyntaxKind.WhileStatement:
      return this.WhileStatement(val)
      case ts.SyntaxKind.ForStatement:
      return this.ForStatement(val)
      case ts.SyntaxKind.ForInStatement:
      return this.ForInStatement(val)
      case ts.SyntaxKind.ForOfStatement:
      return this.ForOfStatement(val)
      case ts.SyntaxKind.ContinueStatement:
      return this.ContinueStatement(val)
      case ts.SyntaxKind.BreakStatement:
      return this.BreakStatement(val)
      case ts.SyntaxKind.ReturnStatement:
      return this.ReturnStatement(val)
      case ts.SyntaxKind.WithStatement:
      return this.WithStatement(val)
      case ts.SyntaxKind.SwitchStatement:
      return this.SwitchStatement(val)
      case ts.SyntaxKind.LabeledStatement:
      return this.LabeledStatement(val)
      case ts.SyntaxKind.ThrowStatement:
      return this.ThrowStatement(val)
      case ts.SyntaxKind.TryStatement:
      return this.TryStatement(val)
      case ts.SyntaxKind.DebuggerStatement:
      return this.DebuggerStatement(val)
      case ts.SyntaxKind.VariableDeclaration:
      return this.VariableDeclaration(val)
      case ts.SyntaxKind.VariableDeclarationList:
      return this.VariableDeclarationList(val)
      case ts.SyntaxKind.FunctionDeclaration:
      return this.FunctionDeclaration(val)
      case ts.SyntaxKind.ClassDeclaration:
      return this.ClassDeclaration(val)
      case ts.SyntaxKind.InterfaceDeclaration:
      return this.InterfaceDeclaration(val)
      case ts.SyntaxKind.TypeAliasDeclaration:
      return this.TypeAliasDeclaration(val)
      case ts.SyntaxKind.EnumDeclaration:
      return this.EnumDeclaration(val)
      case ts.SyntaxKind.ModuleDeclaration:
      return this.ModuleDeclaration(val)
      case ts.SyntaxKind.ModuleBlock:
      return this.ModuleBlock(val)
      case ts.SyntaxKind.CaseBlock:
      return this.CaseBlock(val)
      case ts.SyntaxKind.NamespaceExportDeclaration:
      return this.NamespaceExportDeclaration(val)
      case ts.SyntaxKind.ImportEqualsDeclaration:
      return this.ImportEqualsDeclaration(val)
      case ts.SyntaxKind.ImportDeclaration:
      return this.ImportDeclaration(val)
      case ts.SyntaxKind.ImportClause:
      return this.ImportClause(val)
      case ts.SyntaxKind.NamespaceImport:
      return this.NamespaceImport(val)
      case ts.SyntaxKind.NamedImports:
      return this.NamedImports(val)
      case ts.SyntaxKind.ImportSpecifier:
      return this.ImportSpecifier(val)
      case ts.SyntaxKind.ExportAssignment:
      return this.ExportAssignment(val)
      case ts.SyntaxKind.ExportDeclaration:
      return this.ExportDeclaration(val)
      case ts.SyntaxKind.NamedExports:
      return this.NamedExports(val)
      case ts.SyntaxKind.ExportSpecifier:
      return this.ExportSpecifier(val)
      case ts.SyntaxKind.MissingDeclaration:
      return this.MissingDeclaration(val)
      case ts.SyntaxKind.ExternalModuleReference:
      return this.ExternalModuleReference(val)
      case ts.SyntaxKind.JsxElement:
      return this.JsxElement(val)
      case ts.SyntaxKind.JsxSelfClosingElement:
      return this.JsxSelfClosingElement(val)
      case ts.SyntaxKind.JsxOpeningElement:
      return this.JsxOpeningElement(val)
      case ts.SyntaxKind.JsxClosingElement:
      return this.JsxClosingElement(val)
      case ts.SyntaxKind.JsxAttribute:
      return this.JsxAttribute(val)
      case ts.SyntaxKind.JsxSpreadAttribute:
      return this.JsxSpreadAttribute(val)
      case ts.SyntaxKind.JsxExpression:
      return this.JsxExpression(val)
      case ts.SyntaxKind.CaseClause:
      return this.CaseClause(val)
      case ts.SyntaxKind.DefaultClause:
      return this.DefaultClause(val)
      case ts.SyntaxKind.HeritageClause:
      return this.HeritageClause(val)
      case ts.SyntaxKind.CatchClause:
      return this.CatchClause(val)
      case ts.SyntaxKind.PropertyAssignment:
      return this.PropertyAssignment(val)
      case ts.SyntaxKind.ShorthandPropertyAssignment:
      return this.ShorthandPropertyAssignment(val)
      case ts.SyntaxKind.SpreadAssignment:
      return this.SpreadAssignment(val)
      case ts.SyntaxKind.EnumMember:
      return this.EnumMember(val)
      case ts.SyntaxKind.SourceFile:
      return this.SourceFile(val)
      case ts.SyntaxKind.Bundle:
      return this.Bundle(val)
      case ts.SyntaxKind.JSDocTypeExpression:
      return this.JSDocTypeExpression(val)
      case ts.SyntaxKind.JSDocAllType:
      return this.JSDocAllType(val)
      case ts.SyntaxKind.JSDocUnknownType:
      return this.JSDocUnknownType(val)
      case ts.SyntaxKind.JSDocArrayType:
      return this.JSDocArrayType(val)
      case ts.SyntaxKind.JSDocUnionType:
      return this.JSDocUnionType(val)
      case ts.SyntaxKind.JSDocTupleType:
      return this.JSDocTupleType(val)
      case ts.SyntaxKind.JSDocNullableType:
      return this.JSDocNullableType(val)
      case ts.SyntaxKind.JSDocNonNullableType:
      return this.JSDocNonNullableType(val)
      case ts.SyntaxKind.JSDocRecordType:
      return this.JSDocRecordType(val)
      case ts.SyntaxKind.JSDocRecordMember:
      return this.JSDocRecordMember(val)
      case ts.SyntaxKind.JSDocTypeReference:
      return this.JSDocTypeReference(val)
      case ts.SyntaxKind.JSDocOptionalType:
      return this.JSDocOptionalType(val)
      case ts.SyntaxKind.JSDocFunctionType:
      return this.JSDocFunctionType(val)
      case ts.SyntaxKind.JSDocVariadicType:
      return this.JSDocVariadicType(val)
      case ts.SyntaxKind.JSDocConstructorType:
      return this.JSDocConstructorType(val)
      case ts.SyntaxKind.JSDocThisType:
      return this.JSDocThisType(val)
      case ts.SyntaxKind.JSDocComment:
      return this.JSDoc(val)
      case ts.SyntaxKind.JSDocTag:
      return this.JSDocUnknownTag(val)
      case ts.SyntaxKind.JSDocAugmentsTag:
      return this.JSDocAugmentsTag(val)
      case ts.SyntaxKind.JSDocClassTag:
      return this.JSDocClassTag(val)
      case ts.SyntaxKind.JSDocParameterTag:
      return this.JSDocParameterTag(val)
      case ts.SyntaxKind.JSDocReturnTag:
      return this.JSDocReturnTag(val)
      case ts.SyntaxKind.JSDocTypeTag:
      return this.JSDocTypeTag(val)
      case ts.SyntaxKind.JSDocTemplateTag:
      return this.JSDocTemplateTag(val)
      case ts.SyntaxKind.JSDocTypeLiteral:
      return this.JSDocTypeLiteral(val)
      case ts.SyntaxKind.JSDocLiteralType:
      return this.JSDocLiteralType(val)
      case ts.SyntaxKind.NotEmittedStatement:
      return this.NotEmittedStatement(val)
      case ts.SyntaxKind.PartiallyEmittedExpression:
      return this.PartiallyEmittedExpression(val)
      case ts.SyntaxKind.CommaListExpression:
      return this.CommaListExpression(val)
      case ts.SyntaxKind.FirstTypeNode:
      return this.TypePredicateNode(val)
      case ts.SyntaxKind.LastTypeNode:
      return this.LiteralTypeNode(val)
      case ts.SyntaxKind.FirstLiteralToken:
      return this.NumericLiteral(val)
      case ts.SyntaxKind.LastLiteralToken:
      return this.NoSubstitutionTemplateLiteral(val)
      case ts.SyntaxKind.FirstTemplateToken:
      return this.NoSubstitutionTemplateLiteral(val)
      case ts.SyntaxKind.LastTemplateToken:
      return this.TemplateTail(val)
      case ts.SyntaxKind.FirstNode:
      return this.QualifiedName(val)
      case ts.SyntaxKind.FirstJSDocNode:
      return this.JSDocTypeExpression(val)
      case ts.SyntaxKind.LastJSDocNode:
      return this.JSDocLiteralType(val)
      case ts.SyntaxKind.FirstJSDocTagNode:
      return this.JSDocUnknownTag(val)
      case ts.SyntaxKind.LastJSDocTagNode:
      return this.JSDocLiteralType(val)
    }
  }

}

export function visit(val: any, factory: Factory) {
  return new Visitor(factory).visit(val);
}

